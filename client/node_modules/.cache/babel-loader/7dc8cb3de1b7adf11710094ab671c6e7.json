{"remainingRequest":"D:\\NUS\\Year 4\\Sem 1\\CG4002\\Dashboard\\dancedashboard\\node_modules\\babel-loader\\lib\\index.js!D:\\NUS\\Year 4\\Sem 1\\CG4002\\Dashboard\\dancedashboard\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\NUS\\Year 4\\Sem 1\\CG4002\\Dashboard\\dancedashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\NUS\\Year 4\\Sem 1\\CG4002\\Dashboard\\dancedashboard\\src\\components\\PastDanceSets.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\NUS\\Year 4\\Sem 1\\CG4002\\Dashboard\\dancedashboard\\src\\components\\PastDanceSets.vue","mtime":1601956331781},{"path":"D:\\NUS\\Year 4\\Sem 1\\CG4002\\Dashboard\\dancedashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\NUS\\Year 4\\Sem 1\\CG4002\\Dashboard\\dancedashboard\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\NUS\\Year 4\\Sem 1\\CG4002\\Dashboard\\dancedashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\NUS\\Year 4\\Sem 1\\CG4002\\Dashboard\\dancedashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["PastDanceSets.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <v-container>\r\n    <div style=\"width: 20%; float: left\">\r\n      <psnd />\r\n    </div>\r\n    <div style=\"width: 80%; float: right\">\r\n      <v-row>\r\n        <v-col class=\"mx-auto\" md=\"3\">\r\n          <v-select\r\n            v-model=\"selectedChart\"\r\n            :items=\"chartType\"\r\n            item-text=\"name\"\r\n            item-value=\"value\"\r\n            filled\r\n            label=\"Chart Type\"\r\n            background-color=\"#A9D66E\"\r\n            prepend-icon=\"mdi-view-dashboard\"\r\n            clearable\r\n            dense\r\n            color=\"#000000\"\r\n            @input=\"selectChart\"\r\n            @click:clear=\"clearCharts\"\r\n          />\r\n        </v-col>\r\n        <v-col class=\"mx-auto\">\r\n          <v-select\r\n            v-model=\"search\"\r\n            :items=\"danceSetNum\"\r\n            item-text=\"name\"\r\n            item-value=\"value\"\r\n            filled\r\n            label=\"Dance Set(s)\"\r\n            background-color=\"#76D57C\"\r\n            prepend-icon=\"mdi-magnify\"\r\n            clearable\r\n            multiple\r\n            dense\r\n            color=\"#000000\"\r\n            @input=\"selectDanceSet\"\r\n            @click:clear=\"clearDanceSet\"\r\n          />\r\n        </v-col>\r\n        <v-col class=\"mx-auto\">\r\n          <v-select\r\n            v-model=\"selectedDancers\"\r\n            :items=\"dancers\"\r\n            item-text=\"name\"\r\n            item-value=\"value\"\r\n            filled\r\n            label=\"Dancer(s)\"\r\n            background-color=\"#00D19C\"\r\n            prepend-icon=\"mdi-account-multiple\"\r\n            clearable\r\n            multiple\r\n            dense\r\n            color=\"#000000\"\r\n            @input=\"selectDancers\"\r\n            @click:clear=\"clearDancers\"\r\n          />\r\n        </v-col>\r\n        <v-col class=\"mx-auto\" md=\"3\">\r\n          <v-menu\r\n            v-model=\"dateMenu\"\r\n            :nudge-right=\"40\"\r\n            :close-on-content-click=\"false\"\r\n            transition=\"scale-transition\"\r\n            offset-y\r\n            max-width=\"290px\"\r\n            min-width=\"290px\"\r\n          >\r\n            <template v-slot:activator=\"{ on }\">\r\n              <v-text-field\r\n                label=\"Choose Date(s)\"\r\n                :value=\"dateDisp\"\r\n                v-on=\"on\"\r\n                clearable\r\n                prepend-icon=\"mdi-calendar\"\r\n                background-color=\"#3DDBD8\"\r\n                filled\r\n                dense\r\n                color=\"#000000\"\r\n                @click:clear=\"clearDates\"\r\n              />\r\n            </template>\r\n            <v-date-picker\r\n              v-model=\"dateVal\"\r\n              @click:date=\"selectDates\"\r\n              :max=\"getEndDate\"\r\n              multiple\r\n            />\r\n          </v-menu>\r\n        </v-col>\r\n        <v-col class=\"mx-auto\" md=\"1\">\r\n          <v-btn icon color=\"green\" fab outlined @click=\"submit\">\r\n            <v-icon>mdi-check</v-icon>\r\n          </v-btn>\r\n        </v-col>\r\n      </v-row>\r\n      <p>{{ numOfRecords }} result(s) found</p>\r\n      <!-- if page is loaded and there is table and pie chart data, display both -->\r\n      <template v-if=\"loaded && haveTable && havePie\">\r\n        <v-list v-for=\"(number, i) in danceSetArr\" :key=\"number\">\r\n          <v-row>\r\n            <v-card width=\"65%\">\r\n              <v-card-title>\r\n                Dance Set {{ number }}\r\n                <br />\r\n                {{ tableDate[i] }} {{ danceTimeArray[i] }}\r\n                <v-spacer></v-spacer>\r\n              </v-card-title>\r\n              <v-data-table\r\n                :headers=\"headers\"\r\n                :items=\"getDances(number)\"\r\n              ></v-data-table>\r\n            </v-card>\r\n            <v-spacer />\r\n            <v-card width=\"30%\">\r\n              <v-card-title>\r\n                Sync Dance Set {{ number }}\r\n                <br />\r\n                {{ pieDate[i] }}\r\n                <v-spacer></v-spacer>\r\n              </v-card-title>\r\n              <p style=\"font-size: 8px; color: grey; text-align: justify\">\r\n                *This pie chart shows the number of dance moves the dancers are\r\n                in sync for. Hover over the pink and blue in the pie chart to\r\n                view the percentages.\r\n              </p>\r\n              <PieChartStatic\r\n                :chartdata=\"getChartData(number)\"\r\n                :options=\"chartOptions\"\r\n              />\r\n            </v-card>\r\n          </v-row>\r\n        </v-list>\r\n      </template>\r\n      <!-- if page is loaded and there is table data but no pie chart data, display table only -->\r\n      <template v-else-if=\"loaded && haveTable && !havePie\">\r\n        <v-list v-for=\"(number, i) in danceSetArr\" :key=\"number\">\r\n          <v-card width=\"100%\">\r\n            <v-card-title>\r\n              Dance Set {{ number }}\r\n              <br />\r\n              {{ tableDate[i] }} {{ danceTimeArray[i] }}\r\n              <v-spacer></v-spacer>\r\n            </v-card-title>\r\n            <v-data-table\r\n              :headers=\"headersTableOnly\"\r\n              :items=\"getDancesTableOnly(number)\"\r\n            ></v-data-table>\r\n          </v-card>\r\n        </v-list>\r\n      </template>\r\n      <!-- if page is loaded and there is pie chart data but no table data, display pie chart -->\r\n      <template v-else-if=\"loaded && havePie && !haveTable\">\r\n        <v-list v-for=\"(number, i) in danceSetArr\" :key=\"number\">\r\n          <v-row>\r\n            <v-card width=\"49%\" class=\"mx-auto\">\r\n              <v-card-title>\r\n                Sync Dance Set {{ number }}\r\n                <br />\r\n                {{ pieDate[i] }}\r\n                <v-spacer />\r\n              </v-card-title>\r\n              <p style=\"font-size: 8px; color: grey; text-align: justify\">\r\n                *This pie chart shows the number of dance moves the dancers are\r\n                in sync for. Hover over the pink and blue in the pie chart to\r\n                view the percentages.\r\n              </p>\r\n              <PieChartStatic\r\n                :chartdata=\"getChartData(number)\"\r\n                :options=\"chartOptions\"\r\n              />\r\n            </v-card>\r\n          </v-row>\r\n        </v-list>\r\n      </template>\r\n      <!-- if page is loaded and there is no table and pie chart data, show no data available message -->\r\n      <template v-else-if=\"loaded && !haveTable && !havePie\">\r\n        <v-card\r\n          class=\"mx-auto\"\r\n          width=\"60%\"\r\n          height=\"160\"\r\n          color=\"#ECEFF1\"\r\n          rounded\r\n        >\r\n          <v-card-title>\r\n            <v-row align=\"center\" justify=\"center\">\r\n              <v-icon light large center>mdi-emoticon-sad</v-icon>\r\n            </v-row>\r\n          </v-card-title>\r\n          <p class=\"text-center\">\r\n            What you are looking for cannot be found.\r\n            <br />Sorry!\r\n          </p>\r\n        </v-card>\r\n      </template>\r\n      <template v-else>\r\n        <v-row justify=\"center\">\r\n          <v-progress-circular\r\n            indeterminate\r\n            :size=\"70\"\r\n            :width=\"7\"\r\n            color=\"#FF9800\"\r\n          />\r\n        </v-row>\r\n      </template>\r\n    </div>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport psnd from \"./PersistentSideNavDrawer\";\r\nimport Swal from \"sweetalert2\";\r\nimport PieChartStatic from \"./Charts/PieChartStatic\";\r\n\r\nexport default {\r\n  name: \"PastDanceSets\",\r\n\r\n  components: {\r\n    psnd,\r\n    PieChartStatic,\r\n  },\r\n  data: () => ({\r\n    numDanceSet: null,\r\n    search: null,\r\n    selectedChart: null,\r\n    selectedDancers: null,\r\n    chartType: [\r\n      { name: \"Dance Table\", value: \"Table\" },\r\n      { name: \"Sync Chart\", value: \"Pie\" },\r\n    ],\r\n    dancers: [\r\n      { name: \"Jingxuan\", value: \"Jingxuan\" },\r\n      { name: \"Karan\", value: \"Karan\" },\r\n      { name: \"Kexin\", value: \"Kexin\" },\r\n      { name: \"Sarah\", value: \"Sarah\" },\r\n      { name: \"Tristy\", value: \"Tristy\" },\r\n      { name: \"Yunhan\", value: \"Yunhan\" },\r\n    ],\r\n    headers: [\r\n      { text: \"No.\", value: \"move_number\" },\r\n      { text: \"Dance Move\", value: \"dance_move\" },\r\n      { text: \"Left Dancer\", value: \"left_dancer\" },\r\n      { text: \"Center Dancer\", value: \"center_dancer\" },\r\n      { text: \"Right Dancer\", value: \"right_dancer\" },\r\n      {\r\n        text: \"Sync Delay (seconds)\",\r\n        value: \"diff\",\r\n      },\r\n      {\r\n        text: \"In Sync?\",\r\n        value: \"sync\",\r\n      },\r\n    ],\r\n    headersTableOnly: [\r\n      { text: \"No.\", value: \"move_number\" },\r\n      { text: \"Dance Move\", value: \"dance_move\" },\r\n      { text: \"Time (Left)\", value: \"left_time\" },\r\n      { text: \"Left Dancer\", value: \"left_dancer\" },\r\n      { text: \"Time (Center)\", value: \"center_time\" },\r\n      { text: \"Center Dancer\", value: \"center_dancer\" },\r\n      { text: \"Time (Right)\", value: \"right_time\" },\r\n      { text: \"Right Dancer\", value: \"right_dancer\" },\r\n      {\r\n        text: \"Sync Delay (seconds)\",\r\n        value: \"diff\",\r\n      },\r\n      {\r\n        text: \"In Sync?\",\r\n        value: \"sync\",\r\n      },\r\n    ],\r\n    dances: [],\r\n    loaded: false,\r\n    danceSetNum: [],\r\n    dateMenu: false,\r\n    dateVal: null,\r\n    getEndDate: new Date().toISOString().substr(0, 10),\r\n    tableResponseLength: null,\r\n    pieResponseLength: null,\r\n    pie: [],\r\n    pieDate: [],\r\n    tableDate: [],\r\n    danceSetArr: [],\r\n    numOfRecords: null,\r\n    danceTimeArray: [],\r\n    startTime: null,\r\n    endTime: null,\r\n    havePie: true,\r\n    haveTable: true,\r\n    chartOptions: {\r\n      legend: {\r\n        display: true,\r\n      },\r\n      responsive: true,\r\n      maintainAspectRatio: true,\r\n      plugins: {\r\n        datalabels: {\r\n          color: \"white\",\r\n          textAlign: \"center\",\r\n          font: {\r\n            weight: \"bold\",\r\n            size: 16,\r\n          },\r\n        },\r\n      },\r\n      tooltips: {\r\n        callbacks: {\r\n          label: function (tooltipItem, data) {\r\n            var allData = data.datasets[tooltipItem.datasetIndex].data;\r\n            var tooltipLabel = data.labels[tooltipItem.index];\r\n            var tooltipData = allData[tooltipItem.index];\r\n            var total = 0;\r\n            for (var i in allData) {\r\n              total += allData[i];\r\n            }\r\n            var tooltipPercentage = Math.round((tooltipData / total) * 100);\r\n            return (\r\n              tooltipLabel +\r\n              \": \" +\r\n              tooltipData +\r\n              \" (\" +\r\n              tooltipPercentage +\r\n              \"%)\"\r\n            );\r\n          },\r\n        },\r\n      },\r\n    },\r\n  }),\r\n  computed: {\r\n    dateDisp() {\r\n      return this.dateVal;\r\n    },\r\n  },\r\n  methods: {\r\n    clearCharts: function () {\r\n      this.selectedChart = null;\r\n    },\r\n    selectChart: function () {\r\n      if (this.selectedChart != null) {\r\n        if (this.selectedChart === \"Table\") {\r\n          console.log(\"get data from Dance\");\r\n        } else if (this.selectedChart === \"Pie\") {\r\n          console.log(\"get data from Sync\");\r\n        }\r\n      } else {\r\n        console.log(\"display all dancers\");\r\n      }\r\n    },\r\n    clearDanceSet: function () {\r\n      this.search = null;\r\n    },\r\n    selectDanceSet: function () {\r\n      if (this.search != null && this.search.length > 0) {\r\n        var length = this.search.length;\r\n        for (var k = 0; k < length; k++) {\r\n          console.log(this.search[k]);\r\n        }\r\n      } else {\r\n        this.search = null;\r\n      }\r\n    },\r\n    clearDancers: function () {\r\n      this.selectedDancers = null;\r\n    },\r\n    selectDancers: function () {\r\n      if (this.selectedDancers != null && this.selectedDancers.length > 0) {\r\n        var length = this.selectedDancers.length;\r\n        if (length > 3) {\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Oops...\",\r\n            text: \"A maximum of 3 dancers are allowed!\",\r\n          });\r\n          this.selectedDancers.pop();\r\n        }\r\n        for (var i = 0; i < this.selectedDancers.length; i++) {\r\n          console.log(this.selectedDancers[i]);\r\n        }\r\n      } else {\r\n        this.selectedDancers = null;\r\n      }\r\n    },\r\n    clearDates: function () {\r\n      this.dateVal = null;\r\n    },\r\n    selectDates: function () {\r\n      if (this.dateVal != null) {\r\n        console.log(this.dateVal.length);\r\n        for (var j = 0; j < this.dateVal.length; j++) {\r\n          console.log(this.dateVal[j]);\r\n        }\r\n      } else {\r\n        console.log(\"display all dates\");\r\n      }\r\n    },\r\n    submit: function () {\r\n      // data in selectedDancers are to be taken as AND i.e. the dance sets must contain the dancer names\r\n      // data in dateVal is to be taken as OR\r\n      // data in search is to be taken as OR\r\n      // selectedChart refers to the DB Table (Table: Dance, Pie: Sync)\r\n      // SELECT * FROM Dance/Sync WHERE (dancerNames='%this.selectedDancers%') i.e. Pattern Matching\r\n      //  AND (this.dateVal) AND (this.search)\r\n\r\n      console.log(\"Dancers: \" + this.selectedDancers);\r\n      if (this.selectedDancers != null) {\r\n        this.selectedDancers = this.selectedDancers.sort();\r\n        var dancers = '\"';\r\n        for (var i = 0; i < this.selectedDancers.length; i++) {\r\n          dancers += this.selectedDancers[i] + \",\";\r\n        }\r\n        dancers = dancers.slice(0, -1);\r\n        dancers += '\"';\r\n      } else {\r\n        dancers = null;\r\n      }\r\n\r\n      if (this.dateVal != null) {\r\n        this.dateVal = this.dateVal.sort();\r\n        var dates = '\"';\r\n        for (var j = 0; j < this.dateVal.length; j++) {\r\n          dates += this.dateVal[j] + \",\";\r\n        }\r\n        dates = dates.slice(0, -1);\r\n        dates += '\"';\r\n      } else {\r\n        dates = null;\r\n      }\r\n\r\n      if (this.search != null) {\r\n        this.search = this.search.sort();\r\n        var searchDanceSets = '\"';\r\n        for (var k = 0; k < this.search.length; k++) {\r\n          searchDanceSets += this.search[k] + \",\";\r\n        }\r\n        searchDanceSets = searchDanceSets.slice(0, -1);\r\n        searchDanceSets += '\"';\r\n      } else {\r\n        searchDanceSets = null;\r\n      }\r\n\r\n      const pastDataToSend =\r\n        '{\"chart\":\"' +\r\n        this.selectedChart +\r\n        '\", ' +\r\n        '\"dancers\":' +\r\n        dancers +\r\n        ', \"dates\":' +\r\n        dates +\r\n        ', \"search\":' +\r\n        searchDanceSets +\r\n        \"}\";\r\n      // console.log(pastDataToSend);\r\n      var jsonPastDataToSend = JSON.parse(pastDataToSend);\r\n      console.log(\"Past Data To Send: \" + JSON.stringify(jsonPastDataToSend));\r\n\r\n      axios\r\n        .post(\"/dashboard/past-data\", {\r\n          pastData: jsonPastDataToSend,\r\n        })\r\n        .then((response) => {\r\n          this.dances = [];\r\n          this.tableDate = [];\r\n          this.danceSetArr = [];\r\n          this.pie = [];\r\n          this.pieDate = [];\r\n          this.danceTimeArray = [];\r\n\r\n          if (\r\n            response.data.tableData.length > 0 &&\r\n            (response.data.pieData.length == undefined ||\r\n              response.data.pieData.length == 0)\r\n          ) {\r\n            // if have table data but no pie chart data, then display only table\r\n            this.haveTable = true;\r\n            this.havePie = false;\r\n            this.tableResponseLength = response.data.tableData.length;\r\n\r\n            for (var j = 0; j < this.tableResponseLength; j++) {\r\n              var date_utc = new Date(response.data.tableData[j].dates);\r\n              var date_convert_to_sgt = date_utc.toString();\r\n              var split_sgt_date_by_space = date_convert_to_sgt.split(\" \");\r\n              var formatted_date =\r\n                split_sgt_date_by_space[2] +\r\n                \" \" +\r\n                split_sgt_date_by_space[1] +\r\n                \" \" +\r\n                split_sgt_date_by_space[3];\r\n              if (response.data.tableData[j].move_number == 1) {\r\n                this.tableDate.push(formatted_date);\r\n                this.danceSetArr.push(response.data.tableData[j].dance_set);\r\n              }\r\n              if (response.data.tableData[j].dance_move == \"Start\") {\r\n                if (\r\n                  response.data.tableData[j].left_time != null &&\r\n                  response.data.tableData[j].center_time != null &&\r\n                  response.data.tableData[j].right_time != null\r\n                ) {\r\n                  if (\r\n                    response.data.tableData[j].left_time <=\r\n                      response.data.tableData[j].center_time &&\r\n                    response.data.tableData[j].left_time <=\r\n                      response.data.tableData[j].right_time\r\n                  ) {\r\n                    this.startTime = response.data.tableData[j].left_time;\r\n                  } else if (\r\n                    response.data.tableData[j].center_time <=\r\n                      response.data.tableData[j].left_time &&\r\n                    response.data.tableData[j].center_time <=\r\n                      response.data.tableData[j].right_time\r\n                  ) {\r\n                    this.startTime = response.data.tableData[j].center_time;\r\n                  } else if (\r\n                    response.data.tableData[j].right_time <=\r\n                      response.data.tableData[j].left_time &&\r\n                    response.data.tableData[j].right_time <=\r\n                      response.data.tableData[j].center_time\r\n                  ) {\r\n                    this.startTime = response.data.tableData[j].right_time;\r\n                  }\r\n                } else {\r\n                  if (\r\n                    response.data.tableData[j].left_time != null &&\r\n                    response.data.tableData[j].center_time != null\r\n                  ) {\r\n                    if (\r\n                      response.data.tableData[j].left_time <=\r\n                      response.data.tableData[j].center_time\r\n                    ) {\r\n                      this.startTime = response.data.tableData[j].left_time;\r\n                    } else {\r\n                      this.startTime = response.data.tableData[j].center_time;\r\n                    }\r\n                  } else if (\r\n                    response.data.tableData[j].left_time != null &&\r\n                    response.data.tableData[j].right_time != null\r\n                  ) {\r\n                    if (\r\n                      response.data.tableData[j].left_time <=\r\n                      response.data.tableData[j].right_time\r\n                    ) {\r\n                      this.startTime = response.data.tableData[j].left_time;\r\n                    } else {\r\n                      this.startTime = response.data.tableData[j].right_time;\r\n                    }\r\n                  } else if (\r\n                    response.data.tableData[j].center_time != null &&\r\n                    response.data.tableData[j].right_time != null\r\n                  ) {\r\n                    if (\r\n                      response.data.tableData[j].center_time <=\r\n                      response.data.tableData[j].right_time\r\n                    ) {\r\n                      this.startTime = response.data.tableData[j].center_time;\r\n                    } else {\r\n                      this.startTime = response.data.tableData[j].right_time;\r\n                    }\r\n                  } else if (response.data.tableData[j].left_time != null) {\r\n                    this.startTime = response.data.tableData[j].left_time;\r\n                  } else if (response.data.tableData[j].center_time != null) {\r\n                    this.startTime = response.data.tableData[j].center_time;\r\n                  } else if (response.data.tableData[j].right_time != null) {\r\n                    this.startTime = response.data.tableData[j].right_time;\r\n                  }\r\n                }\r\n                var startTime_split = this.startTime.split(\":\");\r\n                if (startTime_split[0] == \"24\") {\r\n                  startTime_split[0] == \"00\";\r\n                }\r\n                this.startTime = startTime_split[0] + \":\" + startTime_split[1];\r\n              } else if (response.data.tableData[j].dance_move == \"End\") {\r\n                if (\r\n                  response.data.tableData[j].left_time != null &&\r\n                  response.data.tableData[j].center_time != null &&\r\n                  response.data.tableData[j].right_time != null\r\n                ) {\r\n                  if (\r\n                    response.data.tableData[j].left_time <=\r\n                      response.data.tableData[j].center_time &&\r\n                    response.data.tableData[j].left_time <=\r\n                      response.data.tableData[j].right_time\r\n                  ) {\r\n                    this.endTime = response.data.tableData[j].left_time;\r\n                  } else if (\r\n                    response.data.tableData[j].center_time <=\r\n                      response.data.tableData[j].left_time &&\r\n                    response.data.tableData[j].center_time <=\r\n                      response.data.tableData[j].right_time\r\n                  ) {\r\n                    this.endTime = response.data.tableData[j].center_time;\r\n                  } else if (\r\n                    response.data.tableData[j].right_time <=\r\n                      response.data.tableData[j].left_time &&\r\n                    response.data.tableData[j].right_time <=\r\n                      response.data.tableData[j].center_time\r\n                  ) {\r\n                    this.endTime = response.data.tableData[j].right_time;\r\n                  }\r\n                } else {\r\n                  if (\r\n                    response.data.tableData[j].left_time != null &&\r\n                    response.data.tableData[j].center_time != null\r\n                  ) {\r\n                    if (\r\n                      response.data.tableData[j].left_time <=\r\n                      response.data.tableData[j].center_time\r\n                    ) {\r\n                      this.endTime = response.data.tableData[j].left_time;\r\n                    } else {\r\n                      this.endTime = response.data.tableData[j].center_time;\r\n                    }\r\n                  } else if (\r\n                    response.data.tableData[j].left_time != null &&\r\n                    response.data.tableData[j].right_time != null\r\n                  ) {\r\n                    if (\r\n                      response.data.tableData[j].left_time <=\r\n                      response.data.tableData[j].right_time\r\n                    ) {\r\n                      this.endTime = response.data.tableData[j].left_time;\r\n                    } else {\r\n                      this.endTime = response.data.tableData[j].right_time;\r\n                    }\r\n                  } else if (\r\n                    response.data.tableData[j].center_time != null &&\r\n                    response.data.tableData[j].right_time != null\r\n                  ) {\r\n                    if (\r\n                      response.data.tableData[j].center_time <=\r\n                      response.data.tableData[j].right_time\r\n                    ) {\r\n                      this.endTime = response.data.tableData[j].center_time;\r\n                    } else {\r\n                      this.endTime = response.data.tableData[j].right_time;\r\n                    }\r\n                  } else if (response.data.tableData[j].left_time != null) {\r\n                    this.endTime = response.data.tableData[j].left_time;\r\n                  } else if (response.data.tableData[j].center_time != null) {\r\n                    this.endTime = response.data.tableData[j].center_time;\r\n                  } else if (response.data.tableData[j].right_time != null) {\r\n                    this.endTime = response.data.tableData[j].right_time;\r\n                  }\r\n                }\r\n                var endTime_split = this.endTime.split(\":\");\r\n                if (endTime_split[0] == \"24\") {\r\n                  endTime_split[0] == \"00\";\r\n                }\r\n                this.endTime = endTime_split[0] + \":\" + endTime_split[1];\r\n                var timeOfDance = this.startTime + \" - \" + this.endTime;\r\n                this.danceTimeArray.push(timeOfDance);\r\n              }\r\n\r\n              if (response.data.tableData[j].left_time == null) {\r\n                response.data.tableData[j].left_time = \"-\";\r\n              }\r\n\r\n              if (response.data.tableData[j].center_time == null) {\r\n                response.data.tableData[j].center_time = \"-\";\r\n              }\r\n\r\n              if (response.data.tableData[j].right_time == null) {\r\n                response.data.tableData[j].right_time = \"-\";\r\n              }\r\n\r\n              var danceArr = {\r\n                dance_set: response.data.tableData[j].dance_set,\r\n                move_number: response.data.tableData[j].move_number,\r\n                date: formatted_date,\r\n                dance_move: response.data.tableData[j].dance_move,\r\n                left_time: response.data.tableData[j].left_time,\r\n                left_dancer: response.data.tableData[j].left_dancer,\r\n                center_time: response.data.tableData[j].center_time,\r\n                center_dancer: response.data.tableData[j].center_dancer,\r\n                right_time: response.data.tableData[j].right_time,\r\n                right_dancer: response.data.tableData[j].right_dancer,\r\n                diff: response.data.tableData[j].difference,\r\n                sync: response.data.tableData[j].sync,\r\n              };\r\n              this.dances.push(danceArr);\r\n            }\r\n          } else if (\r\n            response.data.pieData.length > 0 &&\r\n            (response.data.tableData.length == undefined ||\r\n              response.data.tableData.length == 0)\r\n          ) {\r\n            // if have only pie chart data and no table data, then display only pie charts\r\n            this.havePie = true;\r\n            this.haveTable = false;\r\n            this.pieResponseLength = response.data.pieData.length;\r\n            for (var k = 0; k < this.pieResponseLength; k++) {\r\n              var pie_date = new Date(response.data.pieData[k].dates);\r\n              var pie_date_sgt = pie_date.toString();\r\n              var pie_date_split_by_space = pie_date_sgt.split(\" \");\r\n              var pie_date_split =\r\n                pie_date_split_by_space[2] +\r\n                \" \" +\r\n                pie_date_split_by_space[1] +\r\n                \" \" +\r\n                pie_date_split_by_space[3];\r\n              this.pieDate.push(pie_date_split);\r\n              this.danceSetArr.push(response.data.pieData[k].dance_set);\r\n              var pieArr = {\r\n                dance_set: response.data.pieData[k].dance_set,\r\n                date: pie_date_split,\r\n                yes_sync: response.data.pieData[k].yes_sync,\r\n                no_sync: response.data.pieData[k].no_sync,\r\n              };\r\n              this.pie.push(pieArr);\r\n            }\r\n            // console.log(this.pie);\r\n          } else if (\r\n            (response.data.pieData.length == undefined &&\r\n              response.data.tableData.length == undefined) ||\r\n            (response.data.pieData.length == 0 &&\r\n              response.data.tableData.length == 0)\r\n          ) {\r\n            // if not table and no pie chart data, then set haveTable and havePie to false\r\n            // to display no data available message\r\n            this.haveTable = false;\r\n            this.havePie = false;\r\n          } else {\r\n            // if have both table and pie chart data, then display both\r\n            this.haveTable = true;\r\n            this.havePie = true;\r\n            this.tableResponseLength = response.data.tableData.length;\r\n            for (var m = 0; m < this.tableResponseLength; m++) {\r\n              var dates = new Date(response.data.tableData[m].dates);\r\n              var sgt_date = dates.toString();\r\n              var split_date_by_space = sgt_date.split(\" \");\r\n              var split_date =\r\n                split_date_by_space[2] +\r\n                \" \" +\r\n                split_date_by_space[1] +\r\n                \" \" +\r\n                split_date_by_space[3];\r\n              if (response.data.tableData[m].move_number == 1) {\r\n                this.tableDate.push(split_date);\r\n                this.danceSetArr.push(response.data.tableData[m].dance_set);\r\n              }\r\n              if (response.data.tableData[m].dance_move == \"Start\") {\r\n                if (\r\n                  response.data.tableData[m].left_time != null &&\r\n                  response.data.tableData[m].center_time != null &&\r\n                  response.data.tableData[m].right_time != null\r\n                ) {\r\n                  if (\r\n                    response.data.tableData[m].left_time <=\r\n                      response.data.tableData[m].center_time &&\r\n                    response.data.tableData[m].left_time <=\r\n                      response.data.tableData[m].right_time\r\n                  ) {\r\n                    this.startTime = response.data.tableData[m].left_time;\r\n                  } else if (\r\n                    response.data.tableData[m].center_time <=\r\n                      response.data.tableData[m].left_time &&\r\n                    response.data.tableData[m].center_time <=\r\n                      response.data.tableData[m].right_time\r\n                  ) {\r\n                    this.startTime = response.data.tableData[m].center_time;\r\n                  } else if (\r\n                    response.data.tableData[m].right_time <=\r\n                      response.data.tableData[m].left_time &&\r\n                    response.data.tableData[m].right_time <=\r\n                      response.data.tableData[m].center_time\r\n                  ) {\r\n                    this.startTime = response.data.tableData[m].right_time;\r\n                  }\r\n                } else {\r\n                  if (\r\n                    response.data.tableData[m].left_time != null &&\r\n                    response.data.tableData[m].center_time != null\r\n                  ) {\r\n                    if (\r\n                      response.data.tableData[m].left_time <=\r\n                      response.data.tableData[m].center_time\r\n                    ) {\r\n                      this.startTime = response.data.tableData[m].left_time;\r\n                    } else {\r\n                      this.startTime = response.data.tableData[m].center_time;\r\n                    }\r\n                  } else if (\r\n                    response.data.tableData[m].left_time != null &&\r\n                    response.data.tableData[m].right_time != null\r\n                  ) {\r\n                    if (\r\n                      response.data.tableData[m].left_time <=\r\n                      response.data.tableData[m].right_time\r\n                    ) {\r\n                      this.startTime = response.data.tableData[m].left_time;\r\n                    } else {\r\n                      this.startTime = response.data.tableData[m].right_time;\r\n                    }\r\n                  } else if (\r\n                    response.data.tableData[m].center_time != null &&\r\n                    response.data.tableData[m].right_time != null\r\n                  ) {\r\n                    if (\r\n                      response.data.tableData[m].center_time <=\r\n                      response.data.tableData[m].right_time\r\n                    ) {\r\n                      this.startTime = response.data.tableData[m].center_time;\r\n                    } else {\r\n                      this.startTime = response.data.tableData[m].right_time;\r\n                    }\r\n                  } else if (response.data.tableData[m].left_time != null) {\r\n                    this.startTime = response.data.tableData[m].left_time;\r\n                  } else if (response.data.tableData[m].center_time != null) {\r\n                    this.startTime = response.data.tableData[m].center_time;\r\n                  } else if (response.data.tableData[m].right_time != null) {\r\n                    this.startTime = response.data.tableData[m].right_time;\r\n                  }\r\n                }\r\n                startTime_split = this.startTime.split(\":\");\r\n                if (startTime_split[0] == \"24\") {\r\n                  startTime_split[0] == \"00\";\r\n                }\r\n                this.startTime = startTime_split[0] + \":\" + startTime_split[1];\r\n              } else if (response.data.tableData[m].dance_move == \"End\") {\r\n                if (\r\n                  response.data.tableData[m].left_time != null &&\r\n                  response.data.tableData[m].center_time != null &&\r\n                  response.data.tableData[m].right_time != null\r\n                ) {\r\n                  if (\r\n                    response.data.tableData[m].left_time <=\r\n                      response.data.tableData[m].center_time &&\r\n                    response.data.tableData[m].left_time <=\r\n                      response.data.tableData[m].right_time\r\n                  ) {\r\n                    this.endTime = response.data.tableData[m].left_time;\r\n                  } else if (\r\n                    response.data.tableData[m].center_time <=\r\n                      response.data.tableData[m].left_time &&\r\n                    response.data.tableData[m].center_time <=\r\n                      response.data.tableData[m].right_time\r\n                  ) {\r\n                    this.endTime = response.data.tableData[m].center_time;\r\n                  } else if (\r\n                    response.data.tableData[m].right_time <=\r\n                      response.data.tableData[m].left_time &&\r\n                    response.data.tableData[m].right_time <=\r\n                      response.data.tableData[m].center_time\r\n                  ) {\r\n                    this.endTime = response.data.tableData[m].right_time;\r\n                  }\r\n                } else {\r\n                  if (\r\n                    response.data.tableData[m].left_time != null &&\r\n                    response.data.tableData[m].center_time != null\r\n                  ) {\r\n                    if (\r\n                      response.data.tableData[m].left_time <=\r\n                      response.data.tableData[m].center_time\r\n                    ) {\r\n                      this.endTime = response.data.tableData[m].left_time;\r\n                    } else {\r\n                      this.endTime = response.data.tableData[m].center_time;\r\n                    }\r\n                  } else if (\r\n                    response.data.tableData[m].left_time != null &&\r\n                    response.data.tableData[m].right_time != null\r\n                  ) {\r\n                    if (\r\n                      response.data.tableData[m].left_time <=\r\n                      response.data.tableData[m].right_time\r\n                    ) {\r\n                      this.endTime = response.data.tableData[m].left_time;\r\n                    } else {\r\n                      this.endTime = response.data.tableData[m].right_time;\r\n                    }\r\n                  } else if (\r\n                    response.data.tableData[m].center_time != null &&\r\n                    response.data.tableData[m].right_time != null\r\n                  ) {\r\n                    if (\r\n                      response.data.tableData[m].center_time <=\r\n                      response.data.tableData[m].right_time\r\n                    ) {\r\n                      this.endTime = response.data.tableData[m].center_time;\r\n                    } else {\r\n                      this.endTime = response.data.tableData[m].right_time;\r\n                    }\r\n                  } else if (response.data.tableData[m].left_time != null) {\r\n                    this.endTime = response.data.tableData[m].left_time;\r\n                  } else if (response.data.tableData[m].center_time != null) {\r\n                    this.endTime = response.data.tableData[m].center_time;\r\n                  } else if (response.data.tableData[m].right_time != null) {\r\n                    this.endTime = response.data.tableData[m].right_time;\r\n                  }\r\n                }\r\n                endTime_split = this.endTime.split(\":\");\r\n                if (endTime_split[0] == \"24\") {\r\n                  endTime_split[0] == \"00\";\r\n                }\r\n                this.endTime = endTime_split[0] + \":\" + endTime_split[1];\r\n                timeOfDance = this.startTime + \" - \" + this.endTime;\r\n                this.danceTimeArray.push(timeOfDance);\r\n              }\r\n\r\n              if (response.data.tableData[m].left_time == null) {\r\n                response.data.tableData[m].left_time = \"-\";\r\n              }\r\n\r\n              if (response.data.tableData[m].center_time == null) {\r\n                response.data.tableData[m].center_time = \"-\";\r\n              }\r\n\r\n              if (response.data.tableData[m].right_time == null) {\r\n                response.data.tableData[m].right_time = \"-\";\r\n              }\r\n              var danceArray = {\r\n                dance_set: response.data.tableData[m].dance_set,\r\n                move_number: response.data.tableData[m].move_number,\r\n                date: split_date,\r\n                dance_move: response.data.tableData[m].dance_move,\r\n                left_time: response.data.tableData[m].left_time,\r\n                left_dancer: response.data.tableData[m].left_dancer,\r\n                center_time: response.data.tableData[m].center_time,\r\n                center_dancer: response.data.tableData[m].center_dancer,\r\n                right_time: response.data.tableData[m].right_time,\r\n                right_dancer: response.data.tableData[m].right_dancer,\r\n                diff: response.data.tableData[m].difference,\r\n                sync: response.data.tableData[m].sync,\r\n              };\r\n              this.dances.push(danceArray);\r\n            }\r\n            this.pieResponseLength = response.data.pieData.length;\r\n            for (var n = 0; n < this.pieResponseLength; n++) {\r\n              var date_pie = new Date(response.data.pieData[n].dates);\r\n              var date_pie_sgt = date_pie.toString();\r\n              var date_pie_split_by_space = date_pie_sgt.split(\" \");\r\n              var date_pie_split =\r\n                date_pie_split_by_space[2] +\r\n                \" \" +\r\n                date_pie_split_by_space[1] +\r\n                \" \" +\r\n                date_pie_split_by_space[3];\r\n              this.pieDate.push(date_pie_split);\r\n              var pieArray = {\r\n                dance_set: response.data.pieData[n].dance_set,\r\n                date: date_pie_split,\r\n                yes_sync: response.data.pieData[n].yes_sync,\r\n                no_sync: response.data.pieData[n].no_sync,\r\n              };\r\n              this.pie.push(pieArray);\r\n            }\r\n          }\r\n          this.numOfRecords = this.danceSetArr.length;\r\n        });\r\n    },\r\n    getChartData: function (set_number) {\r\n      // get the data for pie chart for each dance set\r\n      for (let m = 0; m < this.pieResponseLength; m++) {\r\n        if (this.pie[m].dance_set == set_number) {\r\n          let yes = this.pie[m].yes_sync;\r\n          let no = this.pie[m].no_sync;\r\n          // console.log(\"Number: \" + set_number);\r\n          // console.log(\"Yes: \" + yes + \", No: \" + no);\r\n          let pieChartArray = {\r\n            labels: [\"Yes\", \"No\"],\r\n            datasets: [\r\n              {\r\n                borderWidth: 1,\r\n                borderColor: [\"rgba(245, 66, 158, 1)\", \"rgba(66, 194, 245, 1)\"],\r\n                backgroundColor: [\r\n                  \"rgba(245, 66, 158, 1)\",\r\n                  \"rgba(66, 194, 245, 1)\",\r\n                ],\r\n                data: [yes, no],\r\n              },\r\n            ],\r\n          };\r\n          // console.log(pieChartArray);\r\n          return pieChartArray;\r\n        }\r\n      }\r\n    },\r\n    getDances: function (set_number) {\r\n      // if the chart type is not specified then get\r\n      // move number, date, dance move, dancers in the 3 positions, difference in timing\r\n      // between fastest and slowest dancer and whether the dancers are in sync\r\n      // or not for each dance move\r\n      var danceDataArray = [];\r\n      for (var j = 0; j < this.tableResponseLength; j++) {\r\n        if (this.dances[j].dance_set == set_number) {\r\n          var danceData = {\r\n            move_number: this.dances[j].move_number,\r\n            date: this.dances[j].date,\r\n            dance_move: this.dances[j].dance_move,\r\n            left_dancer: this.dances[j].left_dancer,\r\n            center_dancer: this.dances[j].center_dancer,\r\n            right_dancer: this.dances[j].right_dancer,\r\n            diff: this.dances[j].diff,\r\n            sync: this.dances[j].sync,\r\n          };\r\n          danceDataArray.push(danceData);\r\n        }\r\n      }\r\n      return danceDataArray;\r\n    },\r\n    getDancesTableOnly: function (set_number) {\r\n      // if the chart type is specified to be table only then display additional information\r\n      // time of each dancer for each move for the dance sets\r\n      var danceDataArray = [];\r\n      for (var j = 0; j < this.tableResponseLength; j++) {\r\n        if (this.dances[j].dance_set == set_number) {\r\n          if (this.dances[j].left_time == null) {\r\n            this.dances[j].left_time = \"-\";\r\n          }\r\n\r\n          if (this.dances[j].center_time == null) {\r\n            this.dances[j].center_time = \"-\";\r\n          }\r\n\r\n          if (this.dances[j].right_time == null) {\r\n            this.dances[j].right_time = \"-\";\r\n          }\r\n\r\n          var danceData = {\r\n            move_number: this.dances[j].move_number,\r\n            date: this.dances[j].date,\r\n            dance_move: this.dances[j].dance_move,\r\n            left_time: this.dances[j].left_time,\r\n            left_dancer: this.dances[j].left_dancer,\r\n            center_time: this.dances[j].center_time,\r\n            center_dancer: this.dances[j].center_dancer,\r\n            right_time: this.dances[j].right_time,\r\n            right_dancer: this.dances[j].right_dancer,\r\n            diff: this.dances[j].diff,\r\n            sync: this.dances[j].sync,\r\n          };\r\n          danceDataArray.push(danceData);\r\n        }\r\n      }\r\n      return danceDataArray;\r\n    },\r\n    fetchData: async function () {\r\n      // get all past dance sets data\r\n      const response = await axios.get(\"/dashboard/past-data\");\r\n      this.numDanceSet = response.data.tableData[0].dance_set;\r\n      // this loop is used to set the options users can select for the specific dance sets to view\r\n      // in Dance Set(s) dropdown\r\n      for (var i = 1; i <= this.numDanceSet; i++) {\r\n        var arr = {\r\n          name: i,\r\n          value: i,\r\n        };\r\n        this.danceSetNum.push(arr);\r\n      }\r\n      this.tableResponseLength = response.data.tableData.length;\r\n      for (var j = 0; j < this.tableResponseLength; j++) {\r\n        // get the date of the move\r\n        var date = new Date(response.data.tableData[j].dates);\r\n        var date_sgt = date.toString();\r\n        var date_split_by_space = date_sgt.split(\" \");\r\n        var date_split =\r\n          date_split_by_space[2] +\r\n          \" \" +\r\n          date_split_by_space[1] +\r\n          \" \" +\r\n          date_split_by_space[3];\r\n        if (response.data.tableData[j].move_number == 1) {\r\n          this.tableDate.push(date_split);\r\n          this.danceSetArr.push(response.data.tableData[j].dance_set);\r\n        }\r\n\r\n        // get the start time of the dance set (earliest time among the 3 dancers)\r\n        if (response.data.tableData[j].dance_move == \"Start\") {\r\n          if (\r\n            response.data.tableData[j].left_time != null &&\r\n            response.data.tableData[j].center_time != null &&\r\n            response.data.tableData[j].right_time != null\r\n          ) {\r\n            if (\r\n              response.data.tableData[j].left_time <=\r\n                response.data.tableData[j].center_time &&\r\n              response.data.tableData[j].left_time <=\r\n                response.data.tableData[j].right_time\r\n            ) {\r\n              this.startTime = response.data.tableData[j].left_time;\r\n            } else if (\r\n              response.data.tableData[j].center_time <=\r\n                response.data.tableData[j].left_time &&\r\n              response.data.tableData[j].center_time <=\r\n                response.data.tableData[j].right_time\r\n            ) {\r\n              this.startTime = response.data.tableData[j].center_time;\r\n            } else if (\r\n              response.data.tableData[j].right_time <=\r\n                response.data.tableData[j].left_time &&\r\n              response.data.tableData[j].right_time <=\r\n                response.data.tableData[j].center_time\r\n            ) {\r\n              this.startTime = response.data.tableData[j].right_time;\r\n            }\r\n          } else {\r\n            if (\r\n              response.data.tableData[j].left_time != null &&\r\n              response.data.tableData[j].center_time != null\r\n            ) {\r\n              if (\r\n                response.data.tableData[j].left_time <=\r\n                response.data.tableData[j].center_time\r\n              ) {\r\n                this.startTime = response.data.tableData[j].left_time;\r\n              } else {\r\n                this.startTime = response.data.tableData[j].center_time;\r\n              }\r\n            } else if (\r\n              response.data.tableData[j].left_time != null &&\r\n              response.data.tableData[j].right_time != null\r\n            ) {\r\n              if (\r\n                response.data.tableData[j].left_time <=\r\n                response.data.tableData[j].right_time\r\n              ) {\r\n                this.startTime = response.data.tableData[j].left_time;\r\n              } else {\r\n                this.startTime = response.data.tableData[j].right_time;\r\n              }\r\n            } else if (\r\n              response.data.tableData[j].center_time != null &&\r\n              response.data.tableData[j].right_time != null\r\n            ) {\r\n              if (\r\n                response.data.tableData[j].center_time <=\r\n                response.data.tableData[j].right_time\r\n              ) {\r\n                this.startTime = response.data.tableData[j].center_time;\r\n              } else {\r\n                this.startTime = response.data.tableData[j].right_time;\r\n              }\r\n            } else if (response.data.tableData[j].left_time != null) {\r\n              this.startTime = response.data.tableData[j].left_time;\r\n            } else if (response.data.tableData[j].center_time != null) {\r\n              this.startTime = response.data.tableData[j].center_time;\r\n            } else if (response.data.tableData[j].right_time != null) {\r\n              this.startTime = response.data.tableData[j].right_time;\r\n            }\r\n          }\r\n\r\n          console.log(\"START: \" + this.startTime);\r\n          var startTime_split = this.startTime.split(\":\");\r\n          if (startTime_split[0] == \"24\") {\r\n            startTime_split[0] == \"00\";\r\n          }\r\n          this.startTime = startTime_split[0] + \":\" + startTime_split[1];\r\n        } else if (response.data.tableData[j].dance_move == \"End\") {\r\n          // get the end time of the dance set (latest time among the 3 dancers)\r\n          if (\r\n            response.data.tableData[j].left_time != null &&\r\n            response.data.tableData[j].center_time != null &&\r\n            response.data.tableData[j].right_time != null\r\n          ) {\r\n            if (\r\n              response.data.tableData[j].left_time <=\r\n                response.data.tableData[j].center_time &&\r\n              response.data.tableData[j].left_time <=\r\n                response.data.tableData[j].right_time\r\n            ) {\r\n              this.endTime = response.data.tableData[j].left_time;\r\n            } else if (\r\n              response.data.tableData[j].center_time <=\r\n                response.data.tableData[j].left_time &&\r\n              response.data.tableData[j].center_time <=\r\n                response.data.tableData[j].right_time\r\n            ) {\r\n              this.endTime = response.data.tableData[j].center_time;\r\n            } else if (\r\n              response.data.tableData[j].right_time <=\r\n                response.data.tableData[j].left_time &&\r\n              response.data.tableData[j].right_time <=\r\n                response.data.tableData[j].center_time\r\n            ) {\r\n              this.endTime = response.data.tableData[j].right_time;\r\n            }\r\n          } else {\r\n            if (\r\n              response.data.tableData[j].left_time != null &&\r\n              response.data.tableData[j].center_time != null\r\n            ) {\r\n              if (\r\n                response.data.tableData[j].left_time <=\r\n                response.data.tableData[j].center_time\r\n              ) {\r\n                this.endTime = response.data.tableData[j].left_time;\r\n              } else {\r\n                this.endTime = response.data.tableData[j].center_time;\r\n              }\r\n            } else if (\r\n              response.data.tableData[j].left_time != null &&\r\n              response.data.tableData[j].right_time != null\r\n            ) {\r\n              if (\r\n                response.data.tableData[j].left_time <=\r\n                response.data.tableData[j].right_time\r\n              ) {\r\n                this.endTime = response.data.tableData[j].left_time;\r\n              } else {\r\n                this.endTime = response.data.tableData[j].right_time;\r\n              }\r\n            } else if (\r\n              response.data.tableData[j].center_time != null &&\r\n              response.data.tableData[j].right_time != null\r\n            ) {\r\n              if (\r\n                response.data.tableData[j].center_time <=\r\n                response.data.tableData[j].right_time\r\n              ) {\r\n                this.endTime = response.data.tableData[j].center_time;\r\n              } else {\r\n                this.endTime = response.data.tableData[j].right_time;\r\n              }\r\n            } else if (response.data.tableData[j].left_time != null) {\r\n              this.endTime = response.data.tableData[j].left_time;\r\n            } else if (response.data.tableData[j].center_time != null) {\r\n              this.endTime = response.data.tableData[j].center_time;\r\n            } else if (response.data.tableData[j].right_time != null) {\r\n              this.endTime = response.data.tableData[j].right_time;\r\n            }\r\n          }\r\n          var endTime_split = this.endTime.split(\":\");\r\n          if (endTime_split[0] == \"24\") {\r\n            endTime_split[0] == \"00\";\r\n          }\r\n          this.endTime = endTime_split[0] + \":\" + endTime_split[1];\r\n          var timeOfDance = this.startTime + \" - \" + this.endTime;\r\n          this.danceTimeArray.push(timeOfDance);\r\n        }\r\n        var danceArr = {\r\n          dance_set: response.data.tableData[j].dance_set,\r\n          move_number: response.data.tableData[j].move_number,\r\n          date: date_split,\r\n          dance_move: response.data.tableData[j].dance_move,\r\n          left_time: response.data.tableData[j].left_time,\r\n          left_dancer: response.data.tableData[j].left_dancer,\r\n          center_time: response.data.tableData[j].center_time,\r\n          center_dancer: response.data.tableData[j].center_dancer,\r\n          right_time: response.data.tableData[j].right_time,\r\n          right_dancer: response.data.tableData[j].right_dancer,\r\n          diff: response.data.tableData[j].difference,\r\n          sync: response.data.tableData[j].sync,\r\n        };\r\n        // push the data for each dance move in the dances array\r\n        this.dances.push(danceArr);\r\n      }\r\n      this.pieResponseLength = response.data.pieData.length;\r\n      for (var k = 0; k < this.pieResponseLength; k++) {\r\n        // get the date for pie data\r\n        var pie_date = new Date(response.data.pieData[k].dates);\r\n        var pie_date_sgt = pie_date.toString();\r\n        var pie_date_split_by_space = pie_date_sgt.split(\" \");\r\n        var pie_date_split =\r\n          pie_date_split_by_space[2] +\r\n          \" \" +\r\n          pie_date_split_by_space[1] +\r\n          \" \" +\r\n          pie_date_split_by_space[3];\r\n        this.pieDate.push(pie_date_split);\r\n        var pieArr = {\r\n          dance_set: response.data.pieData[k].dance_set,\r\n          date: pie_date_split,\r\n          yes_sync: response.data.pieData[k].yes_sync,\r\n          no_sync: response.data.pieData[k].no_sync,\r\n        };\r\n        // push the data for each dance set in the pie array\r\n        this.pie.push(pieArr);\r\n      }\r\n      this.numOfRecords = this.danceSetArr.length;\r\n    },\r\n  },\r\n  // used to send an HTTP request to fetch data that the component will then render\r\n  async mounted() {\r\n    this.loaded = false;\r\n    console.log(\"Before: \" + this.loaded);\r\n    try {\r\n      await this.fetchData();\r\n      this.loaded = true;\r\n      console.log(\"After: \" + this.loaded);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  },\r\n};\r\n</script>\r\n"],"sourceRoot":"src/components"}]}