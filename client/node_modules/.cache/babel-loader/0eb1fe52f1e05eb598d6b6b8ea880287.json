{"remainingRequest":"D:\\NUS\\Year 4\\Sem 1\\CG4002\\Dashboard\\dancedashboard\\node_modules\\babel-loader\\lib\\index.js!D:\\NUS\\Year 4\\Sem 1\\CG4002\\Dashboard\\dancedashboard\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\NUS\\Year 4\\Sem 1\\CG4002\\Dashboard\\dancedashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\NUS\\Year 4\\Sem 1\\CG4002\\Dashboard\\dancedashboard\\src\\components\\DancerInformation.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\NUS\\Year 4\\Sem 1\\CG4002\\Dashboard\\dancedashboard\\src\\components\\DancerInformation.vue","mtime":1601949618305},{"path":"D:\\NUS\\Year 4\\Sem 1\\CG4002\\Dashboard\\dancedashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\NUS\\Year 4\\Sem 1\\CG4002\\Dashboard\\dancedashboard\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\NUS\\Year 4\\Sem 1\\CG4002\\Dashboard\\dancedashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\NUS\\Year 4\\Sem 1\\CG4002\\Dashboard\\dancedashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["DancerInformation.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <v-container>\r\n    <div style=\"width: 20%; float: left\">\r\n      <psnd />\r\n    </div>\r\n    <div style=\"width: 80%; float: right\">\r\n      <v-row>\r\n        <v-col class=\"mx-auto\" md=\"3\">\r\n          <v-select\r\n            v-model=\"selectedChart\"\r\n            :items=\"chartType\"\r\n            item-text=\"name\"\r\n            item-value=\"value\"\r\n            filled\r\n            label=\"Chart Type\"\r\n            background-color=\"#A9D66E\"\r\n            prepend-icon=\"mdi-view-dashboard\"\r\n            clearable\r\n            dense\r\n            color=\"#000000\"\r\n            @input=\"selectChart\"\r\n            @click:clear=\"clearCharts\"\r\n          />\r\n        </v-col>\r\n        <v-col class=\"mx-auto\" md=\"3\">\r\n          <v-select\r\n            v-model=\"selectedDancers\"\r\n            :items=\"dancers\"\r\n            item-text=\"name\"\r\n            item-value=\"value\"\r\n            filled\r\n            label=\"Dancer(s)\"\r\n            background-color=\"#00D19C\"\r\n            prepend-icon=\"mdi-account-multiple\"\r\n            clearable\r\n            multiple\r\n            dense\r\n            color=\"#000000\"\r\n            @input=\"selectDancers\"\r\n            @click:clear=\"clearDancers\"\r\n          />\r\n        </v-col>\r\n        <v-col class=\"mx-auto\" md=\"4\">\r\n          <v-menu\r\n            v-model=\"dateMenu\"\r\n            :nudge-right=\"40\"\r\n            :close-on-content-click=\"false\"\r\n            transition=\"scale-transition\"\r\n            offset-y\r\n            max-width=\"290px\"\r\n            min-width=\"290px\"\r\n          >\r\n            <template v-slot:activator=\"{ on }\">\r\n              <v-text-field\r\n                label=\"Choose a Range of Dates\"\r\n                :value=\"dateDisp\"\r\n                v-on=\"on\"\r\n                clearable\r\n                background-color=\"#3DDBD8\"\r\n                prepend-icon=\"mdi-calendar\"\r\n                filled\r\n                dense\r\n                color=\"#000000\"\r\n                @click:clear=\"clearDates\"\r\n              />\r\n            </template>\r\n            <v-date-picker\r\n              v-model=\"dateVal\"\r\n              @click:date=\"selectDates\"\r\n              :max=\"getEndDate\"\r\n              range\r\n            />\r\n          </v-menu>\r\n        </v-col>\r\n        <v-col class=\"mx-auto\" md=\"1\">\r\n          <v-btn icon color=\"green\" fab outlined @click=\"submit\">\r\n            <v-icon>mdi-check</v-icon>\r\n          </v-btn>\r\n        </v-col>\r\n      </v-row>\r\n      <!-- if page is loaded, have time spent, number of sets done and displaying current week data -->\r\n      <template v-if=\"loaded && haveTime && haveSet && haveCurrentWeek\">\r\n        <v-row>\r\n          <v-card width=\"49%\" class=\"mx-auto\">\r\n            <v-card-title class=\"justify-center\">\r\n              Time Spent (Minutes) vs Dancers\r\n            </v-card-title>\r\n            <p align=\"center\">{{ currentWeek }}</p>\r\n            <BarChartTime :chartData=\"timeChartArray\" />\r\n          </v-card>\r\n          <v-spacer />\r\n          <v-card width=\"49%\" class=\"mx-auto\">\r\n            <v-card-title class=\"justify-center\">\r\n              Number of Dance Sets vs Dancers\r\n            </v-card-title>\r\n            <p align=\"center\">{{ currentWeek }}</p>\r\n            <BarChartSet :chartData=\"setChartArray\" />\r\n          </v-card>\r\n        </v-row>\r\n      </template>\r\n      <!-- if page is loaded, have time spent, number of sets done and not displaying current week data -->\r\n      <template v-else-if=\"loaded && haveTime && haveSet && !haveCurrentWeek\">\r\n        <v-row>\r\n          <v-card width=\"49%\" class=\"mx-auto\">\r\n            <v-card-title class=\"justify-center\"\r\n              >Time Spent (Minutes) vs Dancers</v-card-title\r\n            >\r\n            <p align=\"center\">{{ rangeOfDates }}</p>\r\n            <BarChartTime :chartData=\"timeChartArray\" />\r\n          </v-card>\r\n          <v-spacer />\r\n          <v-card width=\"49%\" class=\"mx-auto\">\r\n            <v-card-title class=\"justify-center\"\r\n              >Number of Dance Sets vs Dancers</v-card-title\r\n            >\r\n            <p align=\"center\">{{ rangeOfDates }}</p>\r\n            <BarChartSet :chartData=\"setChartArray\" />\r\n          </v-card>\r\n        </v-row>\r\n      </template>\r\n      <!-- if page is loaded, have time spent, no number of sets data and displaying current week data -->\r\n      <template v-else-if=\"loaded && haveTime && !haveSet && haveCurrentWeek\">\r\n        <v-row>\r\n          <v-card width=\"100%\" class=\"mx-auto\">\r\n            <v-card-title class=\"justify-center\">\r\n              Time Spent (Minutes) vs Dancers\r\n            </v-card-title>\r\n            <p align=\"center\">{{ currentWeek }}</p>\r\n            <BarChartTime :chartData=\"timeChartArray\" />\r\n          </v-card>\r\n        </v-row>\r\n      </template>\r\n      <!-- if page is loaded, have time spent, no number of sets done and not displaying current week data -->\r\n      <template v-else-if=\"loaded && haveTime && !haveSet && !haveCurrentWeek\">\r\n        <v-row>\r\n          <v-card width=\"100%\" class=\"mx-auto\">\r\n            <v-card-title class=\"justify-center\"\r\n              >Time Spent (Minutes) vs Dancers</v-card-title\r\n            >\r\n            <p align=\"center\">{{ rangeOfDates }}</p>\r\n            <BarChartTime :chartData=\"timeChartArray\" />\r\n          </v-card>\r\n        </v-row>\r\n      </template>\r\n      <!-- if page is loaded, no time spent data, have number of sets done and displaying current week data -->\r\n      <template v-else-if=\"loaded && !haveTime && haveSet && haveCurrentWeek\">\r\n        <v-row>\r\n          <v-card width=\"100%\" class=\"mx-auto\">\r\n            <v-card-title class=\"justify-center\"\r\n              >Number of Dance Sets vs Dancers\r\n            </v-card-title>\r\n            <p align=\"center\">{{ currentWeek }}</p>\r\n            <BarChartSet :chartData=\"setChartArray\" />\r\n          </v-card>\r\n        </v-row>\r\n      </template>\r\n      <!-- if page is loaded, no time spent data, number of sets done and not displaying current week data -->\r\n      <template v-else-if=\"loaded && !haveTime && haveSet && !haveCurrentWeek\">\r\n        <v-row>\r\n          <v-card width=\"100%\" class=\"mx-auto\">\r\n            <v-card-title class=\"justify-center\"\r\n              >Number of Dance Sets vs Dancers</v-card-title\r\n            >\r\n            <p align=\"center\">{{ rangeOfDates }}</p>\r\n            <BarChartSet :chartData=\"setChartArray\" />\r\n          </v-card>\r\n        </v-row>\r\n      </template>\r\n      <!-- if page is loaded, no time spent and number of sets done data -->\r\n      <template v-else-if=\"loaded && !haveTime && !haveSet\">\r\n        <v-row>\r\n          <v-card\r\n            class=\"mx-auto\"\r\n            width=\"60%\"\r\n            height=\"160\"\r\n            color=\"#ECEFF1\"\r\n            rounded\r\n          >\r\n            <v-card-title>\r\n              <v-row align=\"center\" justify=\"center\">\r\n                <v-icon light large center>mdi-emoticon-sad</v-icon>\r\n              </v-row>\r\n            </v-card-title>\r\n            <p class=\"text-center\">\r\n              What you are looking for cannot be found.\r\n              <br />Sorry!\r\n            </p>\r\n          </v-card>\r\n        </v-row>\r\n      </template>\r\n      <template v-else>\r\n        <v-row justify=\"center\">\r\n          <v-progress-circular\r\n            indeterminate\r\n            :size=\"70\"\r\n            :width=\"7\"\r\n            color=\"#FF9800\"\r\n          />\r\n        </v-row>\r\n      </template>\r\n      <br />\r\n    </div>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport psnd from \"./PersistentSideNavDrawer\";\r\nimport Swal from \"sweetalert2\";\r\nimport BarChartSet from \"./Charts/BarChartSet\";\r\nimport BarChartTime from \"./Charts/BarChartTime\";\r\n\r\nexport default {\r\n  name: \"Dancers\",\r\n\r\n  components: {\r\n    psnd,\r\n    BarChartSet,\r\n    BarChartTime,\r\n  },\r\n\r\n  data: () => ({\r\n    selectedChart: null,\r\n    chartType: [\r\n      { name: \"Time Spent\", value: \"Time Bar\" },\r\n      { name: \"Sets Done\", value: \"Set Bar\" },\r\n    ],\r\n    selectedDancers: null,\r\n    dancers: [\r\n      { name: \"Jingxuan\", value: \"Jingxuan\" },\r\n      { name: \"Karan\", value: \"Karan\" },\r\n      { name: \"Kexin\", value: \"Kexin\" },\r\n      { name: \"Sarah\", value: \"Sarah\" },\r\n      { name: \"Tristy\", value: \"Tristy\" },\r\n      { name: \"Yunhan\", value: \"Yunhan\" },\r\n    ],\r\n    dateMenu: false,\r\n    dateVal: null,\r\n    getEndDate: new Date().toISOString().substr(0, 10),\r\n    haveTime: true,\r\n    haveSet: true,\r\n    timeChartArray: {\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          label: \"Time Spent\",\r\n          borderWidth: 1,\r\n          backgroundColor: [\r\n            \"rgba(255, 99, 132, 1)\",\r\n            \"rgba(255, 159, 64, 1)\",\r\n            \"rgba(255, 206, 86, 1)\",\r\n            \"rgba(54, 162, 235, 1)\",\r\n            \"rgba(75, 192, 192, 1)\",\r\n            \"rgba(153, 102, 255, 1)\",\r\n          ],\r\n          borderColor: [\r\n            \"rgba(255, 99, 132, 1)\",\r\n            \"rgba(255, 159, 64, 1)\",\r\n            \"rgba(255, 206, 86, 1)\",\r\n            \"rgba(54, 162, 235, 1)\",\r\n            \"rgba(75, 192, 192, 1)\",\r\n            \"rgba(153, 102, 255, 1)\",\r\n          ],\r\n          pointBorderColor: \"#2554FF\",\r\n          data: null,\r\n        },\r\n      ],\r\n    },\r\n    currentWeek: null,\r\n    haveCurrentWeek: false,\r\n    rangeOfDates: null,\r\n    setChartArray: {\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          label: \"Number of Sets\",\r\n          borderWidth: 1,\r\n          backgroundColor: [\r\n            \"rgba(255, 99, 132, 1)\",\r\n            \"rgba(255, 159, 64, 1)\",\r\n            \"rgba(255, 206, 86, 1)\",\r\n            \"rgba(54, 162, 235, 1)\",\r\n            \"rgba(75, 192, 192, 1)\",\r\n            \"rgba(153, 102, 255, 1)\",\r\n          ],\r\n          borderColor: [\r\n            \"rgba(255, 99, 132, 1)\",\r\n            \"rgba(255, 159, 64, 1)\",\r\n            \"rgba(255, 206, 86, 1)\",\r\n            \"rgba(54, 162, 235, 1)\",\r\n            \"rgba(75, 192, 192, 1)\",\r\n            \"rgba(153, 102, 255, 1)\",\r\n          ],\r\n          pointBorderColor: \"#2554FF\",\r\n          data: null,\r\n        },\r\n      ],\r\n    },\r\n    loaded: false,\r\n  }),\r\n  computed: {\r\n    dateDisp() {\r\n      return this.dateVal;\r\n    },\r\n  },\r\n  methods: {\r\n    clearCharts: function () {\r\n      this.selectedChart = null;\r\n    },\r\n    selectChart: function () {\r\n      if (this.selectedChart != null) {\r\n        if (this.selectedChart === \"Table\") {\r\n          console.log(\"get data from Dance\");\r\n        } else if (this.selectedChart === \"Pie\") {\r\n          console.log(\"get data from Sync\");\r\n        }\r\n      } else {\r\n        console.log(\"get data from Dance and Sync\");\r\n      }\r\n    },\r\n    clearDancers: function () {\r\n      this.selectedDancers = null;\r\n    },\r\n    selectDancers: function () {\r\n      if (this.selectedDancers != null && this.selectedDancers.length > 0) {\r\n        console.log(this.selectedDancers.length);\r\n        for (var i = 0; i < this.selectedDancers.length; i++) {\r\n          console.log(this.selectedDancers[i]);\r\n        }\r\n      } else {\r\n        this.selectedDancers = null;\r\n      }\r\n    },\r\n    clearDates: function () {\r\n      this.dateVal = null;\r\n    },\r\n    selectDates: function () {\r\n      if (this.dateVal != null) {\r\n        console.log(this.dateVal.length);\r\n        for (var j = 0; j < this.dateVal.length; j++) {\r\n          console.log(this.dateVal[j]);\r\n        }\r\n      } else {\r\n        console.log(\"display all dates\");\r\n      }\r\n    },\r\n    submit: function () {\r\n      // data in selectedDancers are to be taken as OR\r\n      // data in dateVal is to be taken as OR\r\n      // selectedChart refers to the DB Table (Time Bar: DailyTracker, Set Bar: DailySet)\r\n      // SELECT * FROM DailyTracker/DailySet WHERE (this.selectedDancers) AND (this.dateVal)\r\n      let checkCorrectData = 1;\r\n      if (this.selectedDancers != null) {\r\n        this.selectedDancers = this.selectedDancers.sort();\r\n        var dancers = '\"';\r\n        for (var i = 0; i < this.selectedDancers.length; i++) {\r\n          dancers += this.selectedDancers[i] + \",\";\r\n        }\r\n        dancers = dancers.slice(0, -1);\r\n        dancers += '\"';\r\n      } else {\r\n        dancers = null;\r\n      }\r\n\r\n      if (this.dateVal != null) {\r\n        if (this.dateVal.length == 1) {\r\n          // no range of dates provided, show error message\r\n          checkCorrectData = 0;\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Oops...\",\r\n            text: \"Please provide a range of dates (minimum 5 days).\",\r\n          });\r\n          this.clearDates();\r\n        } else {\r\n          console.log(this.dateVal);\r\n          this.dateVal = this.dateVal.sort();\r\n          let startDate = new Date(this.dateVal[0]);\r\n          let endDate = new Date(this.dateVal[1]);\r\n          let diff = endDate - startDate;\r\n\r\n          console.log(\"Diff: \" + diff);\r\n          // if range of dates is less than 5 days, show error message\r\n          if (diff < 345600000) {\r\n            checkCorrectData = 0;\r\n            Swal.fire({\r\n              icon: \"error\",\r\n              title: \"Oops...\",\r\n              text: \"The range of dates should have a minimum of 5 days.\",\r\n            });\r\n            this.clearDates();\r\n          } else {\r\n            var dates = '\"' + this.dateVal[0] + \",\" + this.dateVal[1] + '\"';\r\n          }\r\n        }\r\n      } else {\r\n        dates = null;\r\n      }\r\n\r\n      // if all data entered (if any) are correct, then post data to server\r\n      if (checkCorrectData == 1) {\r\n        const dancerDataToSend =\r\n          '{\"chart\":\"' +\r\n          this.selectedChart +\r\n          '\", ' +\r\n          '\"dancers\":' +\r\n          dancers +\r\n          ', \"dates\":' +\r\n          dates +\r\n          \"}\";\r\n        // console.log(dancerDataToSend);\r\n        var jsonDancerDataToSend = JSON.parse(dancerDataToSend);\r\n        console.log(\r\n          \"Dancer Data To Send: \" + JSON.stringify(jsonDancerDataToSend)\r\n        );\r\n\r\n        axios\r\n          .post(\"/dashboard/dancers\", {\r\n            dancerData: jsonDancerDataToSend,\r\n          })\r\n          .then((response) => {\r\n            console.log(\"Time length: \" + response.data.timeData.length);\r\n            console.log(\"Set length: \" + response.data.setData.length);\r\n            this.haveTime = false;\r\n            this.haveSet = false;\r\n            this.loaded = false;\r\n            this.timeChartArray = {};\r\n            this.setChartArray = {};\r\n            let labelForCharts = [];\r\n\r\n            if (this.dateVal == null) {\r\n              // no dates selected means show current week\r\n              this.haveCurrentWeek = true;\r\n            } else {\r\n              // show data for specific range of dates\r\n              this.haveCurrentWeek = false;\r\n              let startDate = new Date(this.dateVal[0]);\r\n              let startDate_split = startDate.toString().split(\" \");\r\n              startDate =\r\n                startDate_split[2] +\r\n                \" \" +\r\n                startDate_split[1] +\r\n                \" \" +\r\n                startDate_split[3];\r\n              let endDate = new Date(this.dateVal[1]);\r\n              let endDate_split = endDate.toString().split(\" \");\r\n              endDate =\r\n                endDate_split[2] +\r\n                \" \" +\r\n                endDate_split[1] +\r\n                \" \" +\r\n                endDate_split[3];\r\n              this.rangeOfDates = startDate + \" - \" + endDate;\r\n            }\r\n\r\n            // if have specific dancers selected, then labels must change accordingly\r\n            // to show only those dancers' names\r\n            if (this.selectedDancers != null) {\r\n              for (let i = 0; i < this.selectedDancers.length; i++) {\r\n                labelForCharts.push(this.selectedDancers[i]);\r\n              }\r\n            } else {\r\n              // show all names\r\n              labelForCharts = [\r\n                \"Jingxuan\",\r\n                \"Karan\",\r\n                \"Kexin\",\r\n                \"Sarah\",\r\n                \"Tristy\",\r\n                \"Yunhan\",\r\n              ];\r\n            }\r\n            if (\r\n              response.data.timeData.length != undefined &&\r\n              response.data.setData.length != undefined\r\n            ) {\r\n              // have both time spent and number of sets data, then set the data for both\r\n              // in timeChartArray and setChartArray\r\n              let timeChartData = [];\r\n              for (let j = 0; j < response.data.timeData.length; j++) {\r\n                // null means no data available for that person\r\n                if (response.data.timeData[j].sum == null) {\r\n                  timeChartData.push(0);\r\n                } else {\r\n                  timeChartData.push(parseInt(response.data.timeData[j].sum));\r\n                }\r\n              }\r\n              // check if all data for time is 0\r\n              let countTime = 0;\r\n              for (let k = 0; k < timeChartData.length; k++) {\r\n                if (timeChartData[k] == 0) {\r\n                  countTime++;\r\n                }\r\n              }\r\n\r\n              let setChartData = [];\r\n              for (let k = 0; k < response.data.setData.length; k++) {\r\n                setChartData.push(parseInt(response.data.setData[k].count));\r\n              }\r\n\r\n              // check if all data for number of sets is 0\r\n              let countSet = 0;\r\n              for (let j = 0; j < setChartData.length; j++) {\r\n                if (setChartData[j] == 0) {\r\n                  countSet++;\r\n                }\r\n              }\r\n              if (countTime == timeChartData.length) {\r\n                // if all 0, then that means no data available for what was requested\r\n                this.haveTime = false;\r\n              } else {\r\n                this.haveTime = true;\r\n                let chartArrayTime = {\r\n                  labels: labelForCharts,\r\n                  datasets: [\r\n                    {\r\n                      label: \"Time Spent\",\r\n                      borderWidth: 1,\r\n                      backgroundColor: [\r\n                        \"rgba(255, 99, 132, 1)\",\r\n                        \"rgba(255, 159, 64, 1)\",\r\n                        \"rgba(255, 206, 86, 1)\",\r\n                        \"rgba(54, 162, 235, 1)\",\r\n                        \"rgba(75, 192, 192, 1)\",\r\n                        \"rgba(153, 102, 255, 1)\",\r\n                      ],\r\n                      borderColor: [\r\n                        \"rgba(255, 99, 132, 1)\",\r\n                        \"rgba(255, 159, 64, 1)\",\r\n                        \"rgba(255, 206, 86, 1)\",\r\n                        \"rgba(54, 162, 235, 1)\",\r\n                        \"rgba(75, 192, 192, 1)\",\r\n                        \"rgba(153, 102, 255, 1)\",\r\n                      ],\r\n                      pointBorderColor: \"#2554FF\",\r\n                      data: timeChartData,\r\n                    },\r\n                  ],\r\n                };\r\n                this.timeChartArray = chartArrayTime;\r\n              }\r\n\r\n              if (countSet == setChartData.length) {\r\n                // if all 0, then that means no data available for what was requested\r\n                this.haveSet = false;\r\n              } else {\r\n                this.haveSet = true;\r\n                let chartArraySet = {\r\n                  labels: labelForCharts,\r\n                  datasets: [\r\n                    {\r\n                      label: \"Number of Sets\",\r\n                      borderWidth: 1,\r\n                      backgroundColor: [\r\n                        \"rgba(255, 99, 132, 1)\",\r\n                        \"rgba(255, 159, 64, 1)\",\r\n                        \"rgba(255, 206, 86, 1)\",\r\n                        \"rgba(54, 162, 235, 1)\",\r\n                        \"rgba(75, 192, 192, 1)\",\r\n                        \"rgba(153, 102, 255, 1)\",\r\n                      ],\r\n                      borderColor: [\r\n                        \"rgba(255, 99, 132, 1)\",\r\n                        \"rgba(255, 159, 64, 1)\",\r\n                        \"rgba(255, 206, 86, 1)\",\r\n                        \"rgba(54, 162, 235, 1)\",\r\n                        \"rgba(75, 192, 192, 1)\",\r\n                        \"rgba(153, 102, 255, 1)\",\r\n                      ],\r\n                      pointBorderColor: \"#2554FF\",\r\n                      data: setChartData,\r\n                    },\r\n                  ],\r\n                };\r\n                this.setChartArray = chartArraySet;\r\n              }\r\n              this.loaded = true;\r\n            } else if (\r\n              response.data.timeData.length != undefined &&\r\n              response.data.setData.length == undefined\r\n            ) {\r\n              let timeChartData = [];\r\n              for (let j = 0; j < response.data.timeData.length; j++) {\r\n                if (response.data.timeData[j].sum == null) {\r\n                  timeChartData.push(0);\r\n                } else {\r\n                  timeChartData.push(parseInt(response.data.timeData[j].sum));\r\n                }\r\n              }\r\n              let countTime = 0;\r\n              for (let k = 0; k < timeChartData.length; k++) {\r\n                if (timeChartData[k] == 0) {\r\n                  countTime++;\r\n                }\r\n              }\r\n              console.log(\"Label: \" + labelForCharts);\r\n              console.log(\"Time: \" + timeChartData);\r\n              let chartArrayTime = {\r\n                labels: labelForCharts,\r\n                datasets: [\r\n                  {\r\n                    label: \"Time Spent\",\r\n                    borderWidth: 1,\r\n                    backgroundColor: [\r\n                      \"rgba(255, 99, 132, 1)\",\r\n                      \"rgba(255, 159, 64, 1)\",\r\n                      \"rgba(255, 206, 86, 1)\",\r\n                      \"rgba(54, 162, 235, 1)\",\r\n                      \"rgba(75, 192, 192, 1)\",\r\n                      \"rgba(153, 102, 255, 1)\",\r\n                    ],\r\n                    borderColor: [\r\n                      \"rgba(255, 99, 132, 1)\",\r\n                      \"rgba(255, 159, 64, 1)\",\r\n                      \"rgba(255, 206, 86, 1)\",\r\n                      \"rgba(54, 162, 235, 1)\",\r\n                      \"rgba(75, 192, 192, 1)\",\r\n                      \"rgba(153, 102, 255, 1)\",\r\n                    ],\r\n                    pointBorderColor: \"#2554FF\",\r\n                    data: timeChartData,\r\n                  },\r\n                ],\r\n              };\r\n              this.timeChartArray = chartArrayTime;\r\n              if (countTime == timeChartData.length) {\r\n                this.haveTime = false;\r\n              } else {\r\n                this.haveTime = true;\r\n              }\r\n              this.haveSet = false;\r\n              this.loaded = true;\r\n            } else if (\r\n              response.data.timeData.length == undefined &&\r\n              response.data.setData.length != undefined\r\n            ) {\r\n              // have number of sets done data only\r\n              let setChartData = [];\r\n              for (let k = 0; k < response.data.setData.length; k++) {\r\n                setChartData.push(parseInt(response.data.setData[k].count));\r\n              }\r\n              // check if all data is 0\r\n              let countSet = 0;\r\n              for (let j = 0; j < setChartData.length; j++) {\r\n                if (setChartData[j] == 0) {\r\n                  countSet++;\r\n                }\r\n              }\r\n\r\n              this.haveTime = false;\r\n\r\n              if (countSet == setChartData.length) {\r\n                // if all data is 0, taken to be no data available for the conditions given\r\n                this.haveSet = false;\r\n              } else {\r\n                this.haveSet = true;\r\n                let chartArraySet = {\r\n                  labels: labelForCharts,\r\n                  datasets: [\r\n                    {\r\n                      label: \"Number of Sets\",\r\n                      borderWidth: 1,\r\n                      backgroundColor: [\r\n                        \"rgba(255, 99, 132, 1)\",\r\n                        \"rgba(255, 159, 64, 1)\",\r\n                        \"rgba(255, 206, 86, 1)\",\r\n                        \"rgba(54, 162, 235, 1)\",\r\n                        \"rgba(75, 192, 192, 1)\",\r\n                        \"rgba(153, 102, 255, 1)\",\r\n                      ],\r\n                      borderColor: [\r\n                        \"rgba(255, 99, 132, 1)\",\r\n                        \"rgba(255, 159, 64, 1)\",\r\n                        \"rgba(255, 206, 86, 1)\",\r\n                        \"rgba(54, 162, 235, 1)\",\r\n                        \"rgba(75, 192, 192, 1)\",\r\n                        \"rgba(153, 102, 255, 1)\",\r\n                      ],\r\n                      pointBorderColor: \"#2554FF\",\r\n                      data: setChartData,\r\n                    },\r\n                  ],\r\n                };\r\n                this.setChartArray = chartArraySet;\r\n              }\r\n              this.loaded = true;\r\n            } else {\r\n              // no time spent or number of sets done data available\r\n              this.haveTime = false;\r\n              this.haveSet = false;\r\n              this.loaded = true;\r\n            }\r\n            console.log(\"Have Time: \" + this.haveTime);\r\n            console.log(\"Have Set: \" + this.haveSet);\r\n            console.dir(this.timeChartArray);\r\n            console.dir(this.setChartArray);\r\n          });\r\n      }\r\n    },\r\n    fetchSetData: async function () {\r\n      // get number of sets done data for each of the dancers for the current week\r\n      const response = await axios.get(\"/dashboard/dancers\");\r\n      console.log(response.data.timeData);\r\n      console.log(response.data.setData);\r\n      let setChartData = [];\r\n      for (let i = 0; i < response.data.setData.length; i++) {\r\n        setChartData.push(parseInt(response.data.setData[i].count));\r\n      }\r\n      console.log(setChartData);\r\n      let chartArraySet = {\r\n        labels: [\"Jingxuan\", \"Karan\", \"Kexin\", \"Sarah\", \"Tristy\", \"Yunhan\"],\r\n        datasets: [\r\n          {\r\n            label: \"Number of Sets\",\r\n            borderWidth: 1,\r\n            backgroundColor: [\r\n              \"rgba(255, 99, 132, 1)\",\r\n              \"rgba(255, 159, 64, 1)\",\r\n              \"rgba(255, 206, 86, 1)\",\r\n              \"rgba(54, 162, 235, 1)\",\r\n              \"rgba(75, 192, 192, 1)\",\r\n              \"rgba(153, 102, 255, 1)\",\r\n            ],\r\n            borderColor: [\r\n              \"rgba(255, 99, 132, 1)\",\r\n              \"rgba(255, 159, 64, 1)\",\r\n              \"rgba(255, 206, 86, 1)\",\r\n              \"rgba(54, 162, 235, 1)\",\r\n              \"rgba(75, 192, 192, 1)\",\r\n              \"rgba(153, 102, 255, 1)\",\r\n            ],\r\n            pointBorderColor: \"#2554FF\",\r\n            data: setChartData,\r\n          },\r\n        ],\r\n      };\r\n      return chartArraySet;\r\n    },\r\n    fetchTimeData: async function () {\r\n      // get time spent dancing data for each of the dancers for the current week\r\n      const response = await axios.get(\"/dashboard/dancers\");\r\n      console.log(response.data.timeData);\r\n      let timeChartData = [];\r\n      for (let i = 0; i < response.data.timeData.length; i++) {\r\n        if (response.data.timeData[i].sum == null) {\r\n          timeChartData.push(0);\r\n        } else {\r\n          timeChartData.push(parseInt(response.data.timeData[i].sum));\r\n        }\r\n      }\r\n      console.log(timeChartData);\r\n      let chartArrayTime = {\r\n        labels: [\"Jingxuan\", \"Karan\", \"Kexin\", \"Sarah\", \"Tristy\", \"Yunhan\"],\r\n        datasets: [\r\n          {\r\n            label: \"Time Spent\",\r\n            borderWidth: 1,\r\n            backgroundColor: [\r\n              \"rgba(255, 99, 132, 1)\",\r\n              \"rgba(255, 159, 64, 1)\",\r\n              \"rgba(255, 206, 86, 1)\",\r\n              \"rgba(54, 162, 235, 1)\",\r\n              \"rgba(75, 192, 192, 1)\",\r\n              \"rgba(153, 102, 255, 1)\",\r\n            ],\r\n            borderColor: [\r\n              \"rgba(255, 99, 132, 1)\",\r\n              \"rgba(255, 159, 64, 1)\",\r\n              \"rgba(255, 206, 86, 1)\",\r\n              \"rgba(54, 162, 235, 1)\",\r\n              \"rgba(75, 192, 192, 1)\",\r\n              \"rgba(153, 102, 255, 1)\",\r\n            ],\r\n            pointBorderColor: \"#2554FF\",\r\n            data: timeChartData,\r\n          },\r\n        ],\r\n      };\r\n      return chartArrayTime;\r\n    },\r\n  },\r\n  // used to send an HTTP request to fetch data that the component will then render\r\n  async mounted() {\r\n    this.loaded = false;\r\n    try {\r\n      // get number of sets data for each dancer for the current week\r\n      const setData = await this.fetchSetData();\r\n      this.setChartArray = setData;\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n\r\n    try {\r\n      // get time spent practicing data for each dancer for the current week\r\n      const timeData = await this.fetchTimeData();\r\n      this.timeChartArray = timeData;\r\n      this.loaded = true;\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n\r\n    // get the dates for Monday and Sunday of the current week in DD Month name YYYY format\r\n    // for readability purpose e.g 28 Sep 2020\r\n    // store the current week information in this.currentWeek and set this.haveCurrentWeek to true\r\n    var date = new Date();\r\n    var diff = date.getDate() - date.getDay() + (date.getDay() === 0 ? -6 : 1);\r\n    var mondayDate = new Date(date.setDate(diff));\r\n    mondayDate = mondayDate.toString();\r\n    mondayDate = new Date(mondayDate);\r\n    // console.log(\"MON DATE: \" + mondayDate);\r\n    var sundayDate = new Date(date.setDate(diff + 6));\r\n    sundayDate = sundayDate.toString();\r\n    sundayDate = new Date(sundayDate);\r\n    // console.log(\"SUN DATE: \" + sundayDate);\r\n\r\n    let mondayDate_split = mondayDate.toString().split(\" \");\r\n    mondayDate =\r\n      mondayDate_split[2] +\r\n      \" \" +\r\n      mondayDate_split[1] +\r\n      \" \" +\r\n      mondayDate_split[3];\r\n\r\n    let sundayDate_split = sundayDate.toString().split(\" \");\r\n    sundayDate =\r\n      sundayDate_split[2] +\r\n      \" \" +\r\n      sundayDate_split[1] +\r\n      \" \" +\r\n      sundayDate_split[3];\r\n\r\n    var sundayDateCheckDD = sundayDate_split[2];\r\n    var mondayDateCheckDD = mondayDate_split[2];\r\n    if (parseInt(sundayDateCheckDD) < parseInt(mondayDateCheckDD)) {\r\n      var sundayDateCheckMM = sundayDate_split[1];\r\n      var sundayDateCheckYYYY = parseInt(sundayDate_split[3]);\r\n\r\n      if (sundayDateCheckMM == \"Jan\") sundayDateCheckMM = \"Feb\";\r\n      else if (sundayDateCheckMM == \"Feb\") sundayDateCheckMM = \"Mar\";\r\n      else if (sundayDateCheckMM == \"Mar\") sundayDateCheckMM = \"Apr\";\r\n      else if (sundayDateCheckMM == \"Apr\") sundayDateCheckMM = \"May\";\r\n      else if (sundayDateCheckMM == \"May\") sundayDateCheckMM = \"Jun\";\r\n      else if (sundayDateCheckMM == \"Jun\") sundayDateCheckMM = \"Jul\";\r\n      else if (sundayDateCheckMM == \"Jul\") sundayDateCheckMM = \"Aug\";\r\n      else if (sundayDateCheckMM == \"Aug\") sundayDateCheckMM = \"Sep\";\r\n      else if (sundayDateCheckMM == \"Sep\") sundayDateCheckMM = \"Oct\";\r\n      else if (sundayDateCheckMM == \"Oct\") sundayDateCheckMM = \"Nov\";\r\n      else if (sundayDateCheckMM == \"Nov\") sundayDateCheckMM = \"Dec\";\r\n      else if (sundayDateCheckMM == \"Dec\") {\r\n        sundayDateCheckMM = \"Jan\";\r\n        sundayDateCheckYYYY += 1;\r\n      }\r\n\r\n      sundayDate =\r\n        sundayDateCheckDD + \" \" + sundayDateCheckMM + \" \" + sundayDateCheckYYYY;\r\n    }\r\n    console.log(\"Monday Date: \" + mondayDate);\r\n    console.log(\"Sunday Date: \" + sundayDate);\r\n    this.currentWeek = mondayDate + \" - \" + sundayDate;\r\n    this.haveCurrentWeek = true;\r\n  },\r\n};\r\n</script>\r\n"],"sourceRoot":"src/components"}]}