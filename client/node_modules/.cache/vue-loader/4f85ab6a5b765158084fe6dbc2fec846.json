{"remainingRequest":"D:\\NUS\\Year 4\\Sem 1\\CG4002\\Dashboard\\dancedashboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\NUS\\Year 4\\Sem 1\\CG4002\\Dashboard\\dancedashboard\\src\\components\\Dancers.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\NUS\\Year 4\\Sem 1\\CG4002\\Dashboard\\dancedashboard\\src\\components\\Dancers.vue","mtime":1600784857500},{"path":"D:\\NUS\\Year 4\\Sem 1\\CG4002\\Dashboard\\dancedashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\NUS\\Year 4\\Sem 1\\CG4002\\Dashboard\\dancedashboard\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\NUS\\Year 4\\Sem 1\\CG4002\\Dashboard\\dancedashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\NUS\\Year 4\\Sem 1\\CG4002\\Dashboard\\dancedashboard\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOw0KaW1wb3J0IHBzbmQgZnJvbSAiLi9QZXJzaXN0ZW50U2lkZU5hdkRyYXdlciI7DQppbXBvcnQgU3dhbCBmcm9tICJzd2VldGFsZXJ0MiI7DQppbXBvcnQgQmFyQ2hhcnRTZXQgZnJvbSAiLi9DaGFydHMvQmFyQ2hhcnRTZXQiOw0KaW1wb3J0IEJhckNoYXJ0VGltZSBmcm9tICIuL0NoYXJ0cy9CYXJDaGFydFRpbWUiOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJEYW5jZXJzIiwNCg0KICBjb21wb25lbnRzOiB7DQogICAgcHNuZCwNCiAgICBCYXJDaGFydFNldCwNCiAgICBCYXJDaGFydFRpbWUsDQogIH0sDQoNCiAgZGF0YTogKCkgPT4gKHsNCiAgICBzZWxlY3RlZENoYXJ0OiBudWxsLA0KICAgIGNoYXJ0VHlwZTogWw0KICAgICAgeyBuYW1lOiAiVGltZSBTcGVudCIsIHZhbHVlOiAiVGltZSBCYXIiIH0sDQogICAgICB7IG5hbWU6ICJTZXRzIERvbmUiLCB2YWx1ZTogIlNldCBCYXIiIH0sDQogICAgXSwNCiAgICBzZWxlY3RlZERhbmNlcnM6IG51bGwsDQogICAgZGFuY2VyczogWw0KICAgICAgeyBuYW1lOiAiSmluZ3h1YW4iLCB2YWx1ZTogIkppbmd4dWFuIiB9LA0KICAgICAgeyBuYW1lOiAiS2FyYW4iLCB2YWx1ZTogIkthcmFuIiB9LA0KICAgICAgeyBuYW1lOiAiS2V4aW4iLCB2YWx1ZTogIktleGluIiB9LA0KICAgICAgeyBuYW1lOiAiU2FyYWgiLCB2YWx1ZTogIlNhcmFoIiB9LA0KICAgICAgeyBuYW1lOiAiVHJpc3R5IiwgdmFsdWU6ICJUcmlzdHkiIH0sDQogICAgICB7IG5hbWU6ICJZdW5oYW4iLCB2YWx1ZTogIll1bmhhbiIgfSwNCiAgICBdLA0KICAgIGRhdGVNZW51OiBmYWxzZSwNCiAgICBkYXRlVmFsOiBudWxsLA0KICAgIGdldEVuZERhdGU6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKS5zdWJzdHIoMCwgMTApLA0KICAgIGhhdmVUaW1lOiB0cnVlLA0KICAgIGhhdmVTZXQ6IHRydWUsDQogICAgdGltZUNoYXJ0QXJyYXk6IHsNCiAgICAgIGxhYmVsczogW10sDQogICAgICBkYXRhc2V0czogWw0KICAgICAgICB7DQogICAgICAgICAgbGFiZWw6ICJUaW1lIFNwZW50IiwNCiAgICAgICAgICBib3JkZXJXaWR0aDogMSwNCiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFsNCiAgICAgICAgICAgICJyZ2JhKDI1NSwgOTksIDEzMiwgMSkiLA0KICAgICAgICAgICAgInJnYmEoMjU1LCAxNTksIDY0LCAxKSIsDQogICAgICAgICAgICAicmdiYSgyNTUsIDIwNiwgODYsIDEpIiwNCiAgICAgICAgICAgICJyZ2JhKDU0LCAxNjIsIDIzNSwgMSkiLA0KICAgICAgICAgICAgInJnYmEoNzUsIDE5MiwgMTkyLCAxKSIsDQogICAgICAgICAgICAicmdiYSgxNTMsIDEwMiwgMjU1LCAxKSIsDQogICAgICAgICAgXSwNCiAgICAgICAgICBib3JkZXJDb2xvcjogWw0KICAgICAgICAgICAgInJnYmEoMjU1LCA5OSwgMTMyLCAxKSIsDQogICAgICAgICAgICAicmdiYSgyNTUsIDE1OSwgNjQsIDEpIiwNCiAgICAgICAgICAgICJyZ2JhKDI1NSwgMjA2LCA4NiwgMSkiLA0KICAgICAgICAgICAgInJnYmEoNTQsIDE2MiwgMjM1LCAxKSIsDQogICAgICAgICAgICAicmdiYSg3NSwgMTkyLCAxOTIsIDEpIiwNCiAgICAgICAgICAgICJyZ2JhKDE1MywgMTAyLCAyNTUsIDEpIiwNCiAgICAgICAgICBdLA0KICAgICAgICAgIHBvaW50Qm9yZGVyQ29sb3I6ICIjMjU1NEZGIiwNCiAgICAgICAgICBkYXRhOiBudWxsLA0KICAgICAgICB9LA0KICAgICAgXSwNCiAgICB9LA0KICAgIHNldENoYXJ0QXJyYXk6IHsNCiAgICAgIGxhYmVsczogW10sDQogICAgICBkYXRhc2V0czogWw0KICAgICAgICB7DQogICAgICAgICAgbGFiZWw6ICJOdW1iZXIgb2YgU2V0cyIsDQogICAgICAgICAgYm9yZGVyV2lkdGg6IDEsDQogICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBbDQogICAgICAgICAgICAicmdiYSgyNTUsIDk5LCAxMzIsIDEpIiwNCiAgICAgICAgICAgICJyZ2JhKDI1NSwgMTU5LCA2NCwgMSkiLA0KICAgICAgICAgICAgInJnYmEoMjU1LCAyMDYsIDg2LCAxKSIsDQogICAgICAgICAgICAicmdiYSg1NCwgMTYyLCAyMzUsIDEpIiwNCiAgICAgICAgICAgICJyZ2JhKDc1LCAxOTIsIDE5MiwgMSkiLA0KICAgICAgICAgICAgInJnYmEoMTUzLCAxMDIsIDI1NSwgMSkiLA0KICAgICAgICAgIF0sDQogICAgICAgICAgYm9yZGVyQ29sb3I6IFsNCiAgICAgICAgICAgICJyZ2JhKDI1NSwgOTksIDEzMiwgMSkiLA0KICAgICAgICAgICAgInJnYmEoMjU1LCAxNTksIDY0LCAxKSIsDQogICAgICAgICAgICAicmdiYSgyNTUsIDIwNiwgODYsIDEpIiwNCiAgICAgICAgICAgICJyZ2JhKDU0LCAxNjIsIDIzNSwgMSkiLA0KICAgICAgICAgICAgInJnYmEoNzUsIDE5MiwgMTkyLCAxKSIsDQogICAgICAgICAgICAicmdiYSgxNTMsIDEwMiwgMjU1LCAxKSIsDQogICAgICAgICAgXSwNCiAgICAgICAgICBwb2ludEJvcmRlckNvbG9yOiAiIzI1NTRGRiIsDQogICAgICAgICAgZGF0YTogbnVsbCwNCiAgICAgICAgfSwNCiAgICAgIF0sDQogICAgfSwNCiAgICBjaGFydE9wdGlvbnM6IHsNCiAgICAgIHNjYWxlczogew0KICAgICAgICB5QXhlczogWw0KICAgICAgICAgIHsNCiAgICAgICAgICAgIHRpY2tzOiB7DQogICAgICAgICAgICAgIGJlZ2luQXRaZXJvOiB0cnVlLA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIGdyaWRMaW5lczogew0KICAgICAgICAgICAgICBkaXNwbGF5OiB0cnVlLA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICB9LA0KICAgICAgICBdLA0KICAgICAgICB4QXhlczogWw0KICAgICAgICAgIHsNCiAgICAgICAgICAgIGdyaWRMaW5lczogew0KICAgICAgICAgICAgICBkaXNwbGF5OiBmYWxzZSwNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgfSwNCiAgICAgICAgXSwNCiAgICAgIH0sDQogICAgICBwbHVnaW5zOiB7DQogICAgICAgIGRhdGFsYWJlbHM6IHsNCiAgICAgICAgICBjb2xvcjogImJsYWNrIiwNCiAgICAgICAgICB0ZXh0QWxpZ246ICJjZW50ZXIiLA0KICAgICAgICAgIGZvbnQ6IHsNCiAgICAgICAgICAgIHdlaWdodDogImJvbGQiLA0KICAgICAgICAgICAgc2l6ZTogMTYsDQogICAgICAgICAgfSwNCiAgICAgICAgfSwNCiAgICAgIH0sDQogICAgICBsZWdlbmQ6IHsNCiAgICAgICAgZGlzcGxheTogZmFsc2UsDQogICAgICB9LA0KICAgICAgcmVzcG9uc2l2ZTogdHJ1ZSwNCiAgICAgIG1haW50YWluQXNwZWN0UmF0aW86IGZhbHNlLA0KICAgIH0sDQogICAgbG9hZGVkOiBmYWxzZSwNCiAgfSksDQogIGNvbXB1dGVkOiB7DQogICAgZGF0ZURpc3AoKSB7DQogICAgICByZXR1cm4gdGhpcy5kYXRlVmFsOw0KICAgIH0sDQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBjbGVhckNoYXJ0czogZnVuY3Rpb24oKSB7DQogICAgICB0aGlzLnNlbGVjdGVkQ2hhcnQgPSBudWxsOw0KICAgIH0sDQogICAgc2VsZWN0Q2hhcnQ6IGZ1bmN0aW9uKCkgew0KICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRDaGFydCAhPSBudWxsKSB7DQogICAgICAgIGlmICh0aGlzLnNlbGVjdGVkQ2hhcnQgPT09ICJUYWJsZSIpIHsNCiAgICAgICAgICBjb25zb2xlLmxvZygiZ2V0IGRhdGEgZnJvbSBEYW5jZSIpOw0KICAgICAgICB9IGVsc2UgaWYgKHRoaXMuc2VsZWN0ZWRDaGFydCA9PT0gIlBpZSIpIHsNCiAgICAgICAgICBjb25zb2xlLmxvZygiZ2V0IGRhdGEgZnJvbSBTeW5jIik7DQogICAgICAgIH0NCiAgICAgIH0gZWxzZSB7DQogICAgICAgIGNvbnNvbGUubG9nKCJnZXQgZGF0YSBmcm9tIERhbmNlIGFuZCBTeW5jIik7DQogICAgICB9DQogICAgfSwNCiAgICBjbGVhckRhbmNlcnM6IGZ1bmN0aW9uKCkgew0KICAgICAgdGhpcy5zZWxlY3RlZERhbmNlcnMgPSBudWxsOw0KICAgIH0sDQogICAgc2VsZWN0RGFuY2VyczogZnVuY3Rpb24oKSB7DQogICAgICBpZiAodGhpcy5zZWxlY3RlZERhbmNlcnMgIT0gbnVsbCAmJiB0aGlzLnNlbGVjdGVkRGFuY2Vycy5sZW5ndGggPiAwKSB7DQogICAgICAgIGNvbnNvbGUubG9nKHRoaXMuc2VsZWN0ZWREYW5jZXJzLmxlbmd0aCk7DQogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5zZWxlY3RlZERhbmNlcnMubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnNlbGVjdGVkRGFuY2Vyc1tpXSk7DQogICAgICAgIH0NCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHRoaXMuc2VsZWN0ZWREYW5jZXJzID0gbnVsbDsNCiAgICAgIH0NCiAgICB9LA0KICAgIGNsZWFyRGF0ZXM6IGZ1bmN0aW9uKCkgew0KICAgICAgdGhpcy5kYXRlVmFsID0gbnVsbDsNCiAgICB9LA0KICAgIHNlbGVjdERhdGVzOiBmdW5jdGlvbigpIHsNCiAgICAgIGlmICh0aGlzLmRhdGVWYWwgIT0gbnVsbCkgew0KICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmRhdGVWYWwubGVuZ3RoKTsNCiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB0aGlzLmRhdGVWYWwubGVuZ3RoOyBqKyspIHsNCiAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmRhdGVWYWxbal0pOw0KICAgICAgICB9DQogICAgICB9IGVsc2Ugew0KICAgICAgICBjb25zb2xlLmxvZygiZGlzcGxheSBhbGwgZGF0ZXMiKTsNCiAgICAgIH0NCiAgICB9LA0KICAgIHN1Ym1pdDogZnVuY3Rpb24oKSB7DQogICAgICAvLyBkYXRhIGluIHNlbGVjdGVkRGFuY2VycyBhcmUgdG8gYmUgdGFrZW4gYXMgT1INCiAgICAgIC8vIGRhdGEgaW4gZGF0ZVZhbCBpcyB0byBiZSB0YWtlbiBhcyBPUg0KICAgICAgLy8gc2VsZWN0ZWRDaGFydCByZWZlcnMgdG8gdGhlIERCIFRhYmxlIChUaW1lIEJhcjogRGFpbHlUcmFja2VyLCBTZXQgQmFyOiBEYWlseVNldCkNCiAgICAgIC8vIFNFTEVDVCAqIEZST00gRGFpbHlUcmFja2VyL0RhaWx5U2V0IFdIRVJFICh0aGlzLnNlbGVjdGVkRGFuY2VycykgQU5EICh0aGlzLmRhdGVWYWwpDQogICAgICBpZiAodGhpcy5zZWxlY3RlZERhbmNlcnMgIT0gbnVsbCkgew0KICAgICAgICB0aGlzLnNlbGVjdGVkRGFuY2VycyA9IHRoaXMuc2VsZWN0ZWREYW5jZXJzLnNvcnQoKTsNCiAgICAgICAgdmFyIGRhbmNlcnMgPSAnIic7DQogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5zZWxlY3RlZERhbmNlcnMubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgICBkYW5jZXJzICs9IHRoaXMuc2VsZWN0ZWREYW5jZXJzW2ldICsgIiwiOw0KICAgICAgICB9DQogICAgICAgIGRhbmNlcnMgPSBkYW5jZXJzLnNsaWNlKDAsIC0xKTsNCiAgICAgICAgZGFuY2VycyArPSAnIic7DQogICAgICB9IGVsc2Ugew0KICAgICAgICBkYW5jZXJzID0gbnVsbDsNCiAgICAgIH0NCg0KICAgICAgaWYgKHRoaXMuZGF0ZVZhbCAhPSBudWxsKSB7DQogICAgICAgIGlmICh0aGlzLmRhdGVWYWwubGVuZ3RoID09IDEpIHsNCiAgICAgICAgICBTd2FsLmZpcmUoew0KICAgICAgICAgICAgaWNvbjogImVycm9yIiwNCiAgICAgICAgICAgIHRpdGxlOiAiT29wcy4uLiIsDQogICAgICAgICAgICB0ZXh0OiAiUGxlYXNlIHByb3ZpZGUgYSByYW5nZSBvZiBkYXRlcy4iLA0KICAgICAgICAgIH0pOw0KICAgICAgICAgIHRoaXMuY2xlYXJEYXRlcygpOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuZGF0ZVZhbCk7DQogICAgICAgICAgdGhpcy5kYXRlVmFsID0gdGhpcy5kYXRlVmFsLnNvcnQoKTsNCiAgICAgICAgICB2YXIgZGF0ZXMgPSAnIicgKyB0aGlzLmRhdGVWYWxbMF0gKyAiLCIgKyB0aGlzLmRhdGVWYWxbMV0gKyAnIic7DQogICAgICAgIH0NCiAgICAgIH0gZWxzZSB7DQogICAgICAgIGRhdGVzID0gbnVsbDsNCiAgICAgIH0NCg0KICAgICAgY29uc3QgZGFuY2VyRGF0YVRvU2VuZCA9DQogICAgICAgICd7ImNoYXJ0IjoiJyArDQogICAgICAgIHRoaXMuc2VsZWN0ZWRDaGFydCArDQogICAgICAgICciLCAnICsNCiAgICAgICAgJyJkYW5jZXJzIjonICsNCiAgICAgICAgZGFuY2VycyArDQogICAgICAgICcsICJkYXRlcyI6JyArDQogICAgICAgIGRhdGVzICsNCiAgICAgICAgIn0iOw0KICAgICAgLy8gY29uc29sZS5sb2coZGFuY2VyRGF0YVRvU2VuZCk7DQogICAgICB2YXIganNvbkRhbmNlckRhdGFUb1NlbmQgPSBKU09OLnBhcnNlKGRhbmNlckRhdGFUb1NlbmQpOw0KICAgICAgY29uc29sZS5sb2coDQogICAgICAgICJEYW5jZXIgRGF0YSBUbyBTZW5kOiAiICsgSlNPTi5zdHJpbmdpZnkoanNvbkRhbmNlckRhdGFUb1NlbmQpDQogICAgICApOw0KDQogICAgICBheGlvcw0KICAgICAgICAucG9zdCgiL2Rhc2hib2FyZC9kYW5jZXJzIiwgew0KICAgICAgICAgIGRhbmNlckRhdGE6IGpzb25EYW5jZXJEYXRhVG9TZW5kLA0KICAgICAgICB9KQ0KICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHsNCiAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhLnRpbWVEYXRhLmxlbmd0aCk7DQogICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YS5zZXREYXRhLmxlbmd0aCk7DQogICAgICAgICAgdGhpcy5oYXZlVGltZSA9IGZhbHNlOw0KICAgICAgICAgIHRoaXMuaGF2ZVNldCA9IGZhbHNlOw0KICAgICAgICAgIHRoaXMubG9hZGVkID0gZmFsc2U7DQogICAgICAgICAgdGhpcy50aW1lQ2hhcnRBcnJheSA9IHt9Ow0KICAgICAgICAgIHRoaXMuc2V0Q2hhcnRBcnJheSA9IHt9Ow0KICAgICAgICAgIGxldCBsYWJlbEZvckNoYXJ0cyA9IFtdOw0KDQogICAgICAgICAgaWYgKHRoaXMuc2VsZWN0ZWREYW5jZXJzICE9IG51bGwpIHsNCiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5zZWxlY3RlZERhbmNlcnMubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgICAgICAgbGFiZWxGb3JDaGFydHMucHVzaCh0aGlzLnNlbGVjdGVkRGFuY2Vyc1tpXSk7DQogICAgICAgICAgICB9DQogICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIGxhYmVsRm9yQ2hhcnRzID0gWw0KICAgICAgICAgICAgICAiSmluZ3h1YW4iLA0KICAgICAgICAgICAgICAiS2FyYW4iLA0KICAgICAgICAgICAgICAiS2V4aW4iLA0KICAgICAgICAgICAgICAiU2FyYWgiLA0KICAgICAgICAgICAgICAiVHJpc3R5IiwNCiAgICAgICAgICAgICAgIll1bmhhbiIsDQogICAgICAgICAgICBdOw0KICAgICAgICAgIH0NCiAgICAgICAgICBpZiAoDQogICAgICAgICAgICByZXNwb25zZS5kYXRhLnRpbWVEYXRhLmxlbmd0aCAhPSB1bmRlZmluZWQgJiYNCiAgICAgICAgICAgIHJlc3BvbnNlLmRhdGEuc2V0RGF0YS5sZW5ndGggIT0gdW5kZWZpbmVkDQogICAgICAgICAgKSB7DQogICAgICAgICAgICB0aGlzLmhhdmVUaW1lID0gdHJ1ZTsNCiAgICAgICAgICAgIHRoaXMuaGF2ZVNldCA9IHRydWU7DQogICAgICAgICAgICB0aGlzLmxvYWRlZCA9IHRydWU7DQogICAgICAgICAgICBsZXQgdGltZUNoYXJ0RGF0YSA9IFtdOw0KICAgICAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCByZXNwb25zZS5kYXRhLnRpbWVEYXRhLmxlbmd0aDsgaisrKSB7DQogICAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLnRpbWVEYXRhW2pdLnN1bSA9PSBudWxsKSB7DQogICAgICAgICAgICAgICAgdGltZUNoYXJ0RGF0YS5wdXNoKDApOw0KICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIHRpbWVDaGFydERhdGEucHVzaChwYXJzZUludChyZXNwb25zZS5kYXRhLnRpbWVEYXRhW2pdLnN1bSkpOw0KICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgICAgICBsZXQgY2hhcnRBcnJheVRpbWUgPSB7DQogICAgICAgICAgICAgIGxhYmVsczogbGFiZWxGb3JDaGFydHMsDQogICAgICAgICAgICAgIGRhdGFzZXRzOiBbDQogICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgbGFiZWw6ICJUaW1lIFNwZW50IiwNCiAgICAgICAgICAgICAgICAgIGJvcmRlcldpZHRoOiAxLA0KICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBbDQogICAgICAgICAgICAgICAgICAgICJyZ2JhKDI1NSwgOTksIDEzMiwgMSkiLA0KICAgICAgICAgICAgICAgICAgICAicmdiYSgyNTUsIDE1OSwgNjQsIDEpIiwNCiAgICAgICAgICAgICAgICAgICAgInJnYmEoMjU1LCAyMDYsIDg2LCAxKSIsDQogICAgICAgICAgICAgICAgICAgICJyZ2JhKDU0LCAxNjIsIDIzNSwgMSkiLA0KICAgICAgICAgICAgICAgICAgICAicmdiYSg3NSwgMTkyLCAxOTIsIDEpIiwNCiAgICAgICAgICAgICAgICAgICAgInJnYmEoMTUzLCAxMDIsIDI1NSwgMSkiLA0KICAgICAgICAgICAgICAgICAgXSwNCiAgICAgICAgICAgICAgICAgIGJvcmRlckNvbG9yOiBbDQogICAgICAgICAgICAgICAgICAgICJyZ2JhKDI1NSwgOTksIDEzMiwgMSkiLA0KICAgICAgICAgICAgICAgICAgICAicmdiYSgyNTUsIDE1OSwgNjQsIDEpIiwNCiAgICAgICAgICAgICAgICAgICAgInJnYmEoMjU1LCAyMDYsIDg2LCAxKSIsDQogICAgICAgICAgICAgICAgICAgICJyZ2JhKDU0LCAxNjIsIDIzNSwgMSkiLA0KICAgICAgICAgICAgICAgICAgICAicmdiYSg3NSwgMTkyLCAxOTIsIDEpIiwNCiAgICAgICAgICAgICAgICAgICAgInJnYmEoMTUzLCAxMDIsIDI1NSwgMSkiLA0KICAgICAgICAgICAgICAgICAgXSwNCiAgICAgICAgICAgICAgICAgIHBvaW50Qm9yZGVyQ29sb3I6ICIjMjU1NEZGIiwNCiAgICAgICAgICAgICAgICAgIGRhdGE6IHRpbWVDaGFydERhdGEsDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgXSwNCiAgICAgICAgICAgIH07DQogICAgICAgICAgICB0aGlzLnRpbWVDaGFydEFycmF5ID0gY2hhcnRBcnJheVRpbWU7DQoNCiAgICAgICAgICAgIGxldCBzZXRDaGFydERhdGEgPSBbXTsNCiAgICAgICAgICAgIGZvciAobGV0IGsgPSAwOyBrIDwgcmVzcG9uc2UuZGF0YS5zZXREYXRhLmxlbmd0aDsgaysrKSB7DQogICAgICAgICAgICAgIHNldENoYXJ0RGF0YS5wdXNoKHBhcnNlSW50KHJlc3BvbnNlLmRhdGEuc2V0RGF0YVtrXS5jb3VudCkpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgbGV0IGNoYXJ0QXJyYXlTZXQgPSB7DQogICAgICAgICAgICAgIGxhYmVsczogbGFiZWxGb3JDaGFydHMsDQogICAgICAgICAgICAgIGRhdGFzZXRzOiBbDQogICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgbGFiZWw6ICJOdW1iZXIgb2YgU2V0cyIsDQogICAgICAgICAgICAgICAgICBib3JkZXJXaWR0aDogMSwNCiAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogWw0KICAgICAgICAgICAgICAgICAgICAicmdiYSgyNTUsIDk5LCAxMzIsIDEpIiwNCiAgICAgICAgICAgICAgICAgICAgInJnYmEoMjU1LCAxNTksIDY0LCAxKSIsDQogICAgICAgICAgICAgICAgICAgICJyZ2JhKDI1NSwgMjA2LCA4NiwgMSkiLA0KICAgICAgICAgICAgICAgICAgICAicmdiYSg1NCwgMTYyLCAyMzUsIDEpIiwNCiAgICAgICAgICAgICAgICAgICAgInJnYmEoNzUsIDE5MiwgMTkyLCAxKSIsDQogICAgICAgICAgICAgICAgICAgICJyZ2JhKDE1MywgMTAyLCAyNTUsIDEpIiwNCiAgICAgICAgICAgICAgICAgIF0sDQogICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogWw0KICAgICAgICAgICAgICAgICAgICAicmdiYSgyNTUsIDk5LCAxMzIsIDEpIiwNCiAgICAgICAgICAgICAgICAgICAgInJnYmEoMjU1LCAxNTksIDY0LCAxKSIsDQogICAgICAgICAgICAgICAgICAgICJyZ2JhKDI1NSwgMjA2LCA4NiwgMSkiLA0KICAgICAgICAgICAgICAgICAgICAicmdiYSg1NCwgMTYyLCAyMzUsIDEpIiwNCiAgICAgICAgICAgICAgICAgICAgInJnYmEoNzUsIDE5MiwgMTkyLCAxKSIsDQogICAgICAgICAgICAgICAgICAgICJyZ2JhKDE1MywgMTAyLCAyNTUsIDEpIiwNCiAgICAgICAgICAgICAgICAgIF0sDQogICAgICAgICAgICAgICAgICBwb2ludEJvcmRlckNvbG9yOiAiIzI1NTRGRiIsDQogICAgICAgICAgICAgICAgICBkYXRhOiBzZXRDaGFydERhdGEsDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgXSwNCiAgICAgICAgICAgIH07DQogICAgICAgICAgICB0aGlzLnNldENoYXJ0QXJyYXkgPSBjaGFydEFycmF5U2V0Ow0KICAgICAgICAgIH0gZWxzZSBpZiAoDQogICAgICAgICAgICByZXNwb25zZS5kYXRhLnRpbWVEYXRhLmxlbmd0aCAhPSB1bmRlZmluZWQgJiYNCiAgICAgICAgICAgIHJlc3BvbnNlLmRhdGEuc2V0RGF0YS5sZW5ndGggPT0gdW5kZWZpbmVkDQogICAgICAgICAgKSB7DQogICAgICAgICAgICB0aGlzLmhhdmVUaW1lID0gdHJ1ZTsNCiAgICAgICAgICAgIHRoaXMuaGF2ZVNldCA9IGZhbHNlOw0KICAgICAgICAgICAgdGhpcy5sb2FkZWQgPSB0cnVlOw0KICAgICAgICAgICAgbGV0IHRpbWVDaGFydERhdGEgPSBbXTsNCiAgICAgICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgcmVzcG9uc2UuZGF0YS50aW1lRGF0YS5sZW5ndGg7IGorKykgew0KICAgICAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS50aW1lRGF0YVtqXS5zdW0gPT0gbnVsbCkgew0KICAgICAgICAgICAgICAgIHRpbWVDaGFydERhdGEucHVzaCgwKTsNCiAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICB0aW1lQ2hhcnREYXRhLnB1c2gocGFyc2VJbnQocmVzcG9uc2UuZGF0YS50aW1lRGF0YVtqXS5zdW0pKTsNCiAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgY29uc29sZS5sb2coIkxhYmVsOiAiICsgbGFiZWxGb3JDaGFydHMpOw0KICAgICAgICAgICAgY29uc29sZS5sb2coIlRpbWU6ICIgKyB0aW1lQ2hhcnREYXRhKTsNCiAgICAgICAgICAgIGxldCBjaGFydEFycmF5VGltZSA9IHsNCiAgICAgICAgICAgICAgbGFiZWxzOiBsYWJlbEZvckNoYXJ0cywNCiAgICAgICAgICAgICAgZGF0YXNldHM6IFsNCiAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICBsYWJlbDogIlRpbWUgU3BlbnQiLA0KICAgICAgICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDEsDQogICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFsNCiAgICAgICAgICAgICAgICAgICAgInJnYmEoMjU1LCA5OSwgMTMyLCAxKSIsDQogICAgICAgICAgICAgICAgICAgICJyZ2JhKDI1NSwgMTU5LCA2NCwgMSkiLA0KICAgICAgICAgICAgICAgICAgICAicmdiYSgyNTUsIDIwNiwgODYsIDEpIiwNCiAgICAgICAgICAgICAgICAgICAgInJnYmEoNTQsIDE2MiwgMjM1LCAxKSIsDQogICAgICAgICAgICAgICAgICAgICJyZ2JhKDc1LCAxOTIsIDE5MiwgMSkiLA0KICAgICAgICAgICAgICAgICAgICAicmdiYSgxNTMsIDEwMiwgMjU1LCAxKSIsDQogICAgICAgICAgICAgICAgICBdLA0KICAgICAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6IFsNCiAgICAgICAgICAgICAgICAgICAgInJnYmEoMjU1LCA5OSwgMTMyLCAxKSIsDQogICAgICAgICAgICAgICAgICAgICJyZ2JhKDI1NSwgMTU5LCA2NCwgMSkiLA0KICAgICAgICAgICAgICAgICAgICAicmdiYSgyNTUsIDIwNiwgODYsIDEpIiwNCiAgICAgICAgICAgICAgICAgICAgInJnYmEoNTQsIDE2MiwgMjM1LCAxKSIsDQogICAgICAgICAgICAgICAgICAgICJyZ2JhKDc1LCAxOTIsIDE5MiwgMSkiLA0KICAgICAgICAgICAgICAgICAgICAicmdiYSgxNTMsIDEwMiwgMjU1LCAxKSIsDQogICAgICAgICAgICAgICAgICBdLA0KICAgICAgICAgICAgICAgICAgcG9pbnRCb3JkZXJDb2xvcjogIiMyNTU0RkYiLA0KICAgICAgICAgICAgICAgICAgZGF0YTogdGltZUNoYXJ0RGF0YSwNCiAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICBdLA0KICAgICAgICAgICAgfTsNCiAgICAgICAgICAgIHRoaXMudGltZUNoYXJ0QXJyYXkgPSBjaGFydEFycmF5VGltZTsNCiAgICAgICAgICB9IGVsc2UgaWYgKA0KICAgICAgICAgICAgcmVzcG9uc2UuZGF0YS50aW1lRGF0YS5sZW5ndGggPT0gdW5kZWZpbmVkICYmDQogICAgICAgICAgICByZXNwb25zZS5kYXRhLnNldERhdGEubGVuZ3RoICE9IHVuZGVmaW5lZA0KICAgICAgICAgICkgew0KICAgICAgICAgICAgdGhpcy5oYXZlVGltZSA9IGZhbHNlOw0KICAgICAgICAgICAgdGhpcy5oYXZlU2V0ID0gdHJ1ZTsNCiAgICAgICAgICAgIHRoaXMubG9hZGVkID0gdHJ1ZTsNCiAgICAgICAgICAgIGxldCBzZXRDaGFydERhdGEgPSBbXTsNCiAgICAgICAgICAgIGZvciAobGV0IGsgPSAwOyBrIDwgcmVzcG9uc2UuZGF0YS5zZXREYXRhLmxlbmd0aDsgaysrKSB7DQogICAgICAgICAgICAgIHNldENoYXJ0RGF0YS5wdXNoKHBhcnNlSW50KHJlc3BvbnNlLmRhdGEuc2V0RGF0YVtrXS5jb3VudCkpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgY29uc29sZS5sb2coc2V0Q2hhcnREYXRhKTsNCiAgICAgICAgICAgIGxldCBjaGFydEFycmF5U2V0ID0gew0KICAgICAgICAgICAgICBsYWJlbHM6IGxhYmVsRm9yQ2hhcnRzLA0KICAgICAgICAgICAgICBkYXRhc2V0czogWw0KICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgIGxhYmVsOiAiTnVtYmVyIG9mIFNldHMiLA0KICAgICAgICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDEsDQogICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFsNCiAgICAgICAgICAgICAgICAgICAgInJnYmEoMjU1LCA5OSwgMTMyLCAxKSIsDQogICAgICAgICAgICAgICAgICAgICJyZ2JhKDI1NSwgMTU5LCA2NCwgMSkiLA0KICAgICAgICAgICAgICAgICAgICAicmdiYSgyNTUsIDIwNiwgODYsIDEpIiwNCiAgICAgICAgICAgICAgICAgICAgInJnYmEoNTQsIDE2MiwgMjM1LCAxKSIsDQogICAgICAgICAgICAgICAgICAgICJyZ2JhKDc1LCAxOTIsIDE5MiwgMSkiLA0KICAgICAgICAgICAgICAgICAgICAicmdiYSgxNTMsIDEwMiwgMjU1LCAxKSIsDQogICAgICAgICAgICAgICAgICBdLA0KICAgICAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6IFsNCiAgICAgICAgICAgICAgICAgICAgInJnYmEoMjU1LCA5OSwgMTMyLCAxKSIsDQogICAgICAgICAgICAgICAgICAgICJyZ2JhKDI1NSwgMTU5LCA2NCwgMSkiLA0KICAgICAgICAgICAgICAgICAgICAicmdiYSgyNTUsIDIwNiwgODYsIDEpIiwNCiAgICAgICAgICAgICAgICAgICAgInJnYmEoNTQsIDE2MiwgMjM1LCAxKSIsDQogICAgICAgICAgICAgICAgICAgICJyZ2JhKDc1LCAxOTIsIDE5MiwgMSkiLA0KICAgICAgICAgICAgICAgICAgICAicmdiYSgxNTMsIDEwMiwgMjU1LCAxKSIsDQogICAgICAgICAgICAgICAgICBdLA0KICAgICAgICAgICAgICAgICAgcG9pbnRCb3JkZXJDb2xvcjogIiMyNTU0RkYiLA0KICAgICAgICAgICAgICAgICAgZGF0YTogc2V0Q2hhcnREYXRhLA0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgIF0sDQogICAgICAgICAgICB9Ow0KICAgICAgICAgICAgdGhpcy5zZXRDaGFydEFycmF5ID0gY2hhcnRBcnJheVNldDsNCiAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgdGhpcy5oYXZlVGltZSA9IGZhbHNlOw0KICAgICAgICAgICAgdGhpcy5oYXZlU2V0ID0gZmFsc2U7DQogICAgICAgICAgICB0aGlzLmxvYWRlZCA9IHRydWU7DQogICAgICAgICAgfQ0KDQogICAgICAgICAgY29uc29sZS5kaXIodGhpcy50aW1lQ2hhcnRBcnJheSk7DQogICAgICAgICAgY29uc29sZS5kaXIodGhpcy5zZXRDaGFydEFycmF5KTsNCiAgICAgICAgfSk7DQogICAgfSwNCiAgICBmZXRjaFNldERhdGE6IGFzeW5jIGZ1bmN0aW9uKCkgew0KICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoIi9kYXNoYm9hcmQvZGFuY2VycyIpOw0KICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YS50aW1lRGF0YSk7DQogICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhLnNldERhdGEpOw0KICAgICAgbGV0IHNldENoYXJ0RGF0YSA9IFtdOw0KICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCByZXNwb25zZS5kYXRhLnNldERhdGEubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgc2V0Q2hhcnREYXRhLnB1c2gocGFyc2VJbnQocmVzcG9uc2UuZGF0YS5zZXREYXRhW2ldLmNvdW50KSk7DQogICAgICB9DQogICAgICBjb25zb2xlLmxvZyhzZXRDaGFydERhdGEpOw0KICAgICAgbGV0IGNoYXJ0QXJyYXlTZXQgPSB7DQogICAgICAgIGxhYmVsczogWyJKaW5neHVhbiIsICJLYXJhbiIsICJLZXhpbiIsICJTYXJhaCIsICJUcmlzdHkiLCAiWXVuaGFuIl0sDQogICAgICAgIGRhdGFzZXRzOiBbDQogICAgICAgICAgew0KICAgICAgICAgICAgbGFiZWw6ICJOdW1iZXIgb2YgU2V0cyIsDQogICAgICAgICAgICBib3JkZXJXaWR0aDogMSwNCiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogWw0KICAgICAgICAgICAgICAicmdiYSgyNTUsIDk5LCAxMzIsIDEpIiwNCiAgICAgICAgICAgICAgInJnYmEoMjU1LCAxNTksIDY0LCAxKSIsDQogICAgICAgICAgICAgICJyZ2JhKDI1NSwgMjA2LCA4NiwgMSkiLA0KICAgICAgICAgICAgICAicmdiYSg1NCwgMTYyLCAyMzUsIDEpIiwNCiAgICAgICAgICAgICAgInJnYmEoNzUsIDE5MiwgMTkyLCAxKSIsDQogICAgICAgICAgICAgICJyZ2JhKDE1MywgMTAyLCAyNTUsIDEpIiwNCiAgICAgICAgICAgIF0sDQogICAgICAgICAgICBib3JkZXJDb2xvcjogWw0KICAgICAgICAgICAgICAicmdiYSgyNTUsIDk5LCAxMzIsIDEpIiwNCiAgICAgICAgICAgICAgInJnYmEoMjU1LCAxNTksIDY0LCAxKSIsDQogICAgICAgICAgICAgICJyZ2JhKDI1NSwgMjA2LCA4NiwgMSkiLA0KICAgICAgICAgICAgICAicmdiYSg1NCwgMTYyLCAyMzUsIDEpIiwNCiAgICAgICAgICAgICAgInJnYmEoNzUsIDE5MiwgMTkyLCAxKSIsDQogICAgICAgICAgICAgICJyZ2JhKDE1MywgMTAyLCAyNTUsIDEpIiwNCiAgICAgICAgICAgIF0sDQogICAgICAgICAgICBwb2ludEJvcmRlckNvbG9yOiAiIzI1NTRGRiIsDQogICAgICAgICAgICBkYXRhOiBzZXRDaGFydERhdGEsDQogICAgICAgICAgfSwNCiAgICAgICAgXSwNCiAgICAgIH07DQogICAgICByZXR1cm4gY2hhcnRBcnJheVNldDsNCiAgICB9LA0KICAgIGZldGNoVGltZURhdGE6IGFzeW5jIGZ1bmN0aW9uKCkgew0KICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoIi9kYXNoYm9hcmQvZGFuY2VycyIpOw0KICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YS50aW1lRGF0YSk7DQogICAgICBsZXQgdGltZUNoYXJ0RGF0YSA9IFtdOw0KICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCByZXNwb25zZS5kYXRhLnRpbWVEYXRhLmxlbmd0aDsgaSsrKSB7DQogICAgICAgIGlmIChyZXNwb25zZS5kYXRhLnRpbWVEYXRhW2ldLnN1bSA9PSBudWxsKSB7DQogICAgICAgICAgdGltZUNoYXJ0RGF0YS5wdXNoKDApOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgIHRpbWVDaGFydERhdGEucHVzaChwYXJzZUludChyZXNwb25zZS5kYXRhLnRpbWVEYXRhW2ldLnN1bSkpOw0KICAgICAgICB9DQogICAgICB9DQogICAgICBjb25zb2xlLmxvZyh0aW1lQ2hhcnREYXRhKTsNCiAgICAgIGxldCBjaGFydEFycmF5VGltZSA9IHsNCiAgICAgICAgbGFiZWxzOiBbIkppbmd4dWFuIiwgIkthcmFuIiwgIktleGluIiwgIlNhcmFoIiwgIlRyaXN0eSIsICJZdW5oYW4iXSwNCiAgICAgICAgZGF0YXNldHM6IFsNCiAgICAgICAgICB7DQogICAgICAgICAgICBsYWJlbDogIlRpbWUgU3BlbnQiLA0KICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDEsDQogICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFsNCiAgICAgICAgICAgICAgInJnYmEoMjU1LCA5OSwgMTMyLCAxKSIsDQogICAgICAgICAgICAgICJyZ2JhKDI1NSwgMTU5LCA2NCwgMSkiLA0KICAgICAgICAgICAgICAicmdiYSgyNTUsIDIwNiwgODYsIDEpIiwNCiAgICAgICAgICAgICAgInJnYmEoNTQsIDE2MiwgMjM1LCAxKSIsDQogICAgICAgICAgICAgICJyZ2JhKDc1LCAxOTIsIDE5MiwgMSkiLA0KICAgICAgICAgICAgICAicmdiYSgxNTMsIDEwMiwgMjU1LCAxKSIsDQogICAgICAgICAgICBdLA0KICAgICAgICAgICAgYm9yZGVyQ29sb3I6IFsNCiAgICAgICAgICAgICAgInJnYmEoMjU1LCA5OSwgMTMyLCAxKSIsDQogICAgICAgICAgICAgICJyZ2JhKDI1NSwgMTU5LCA2NCwgMSkiLA0KICAgICAgICAgICAgICAicmdiYSgyNTUsIDIwNiwgODYsIDEpIiwNCiAgICAgICAgICAgICAgInJnYmEoNTQsIDE2MiwgMjM1LCAxKSIsDQogICAgICAgICAgICAgICJyZ2JhKDc1LCAxOTIsIDE5MiwgMSkiLA0KICAgICAgICAgICAgICAicmdiYSgxNTMsIDEwMiwgMjU1LCAxKSIsDQogICAgICAgICAgICBdLA0KICAgICAgICAgICAgcG9pbnRCb3JkZXJDb2xvcjogIiMyNTU0RkYiLA0KICAgICAgICAgICAgZGF0YTogdGltZUNoYXJ0RGF0YSwNCiAgICAgICAgICB9LA0KICAgICAgICBdLA0KICAgICAgfTsNCiAgICAgIHJldHVybiBjaGFydEFycmF5VGltZTsNCiAgICB9LA0KICB9LA0KICBhc3luYyBtb3VudGVkKCkgew0KICAgIHRoaXMubG9hZGVkID0gZmFsc2U7DQogICAgdHJ5IHsNCiAgICAgIGNvbnN0IHNldERhdGEgPSBhd2FpdCB0aGlzLmZldGNoU2V0RGF0YSgpOw0KICAgICAgdGhpcy5zZXRDaGFydEFycmF5ID0gc2V0RGF0YTsNCiAgICAgIC8vIGNvbnNvbGUubG9nKCJTZXQgTGVuZ3RoOiAiICsgdGhpcy5zZXRDaGFydEFycmF5LmRhdGFzZXRzWzBdLmRhdGEubGVuZ3RoKTsNCiAgICB9IGNhdGNoIChlKSB7DQogICAgICBjb25zb2xlLmVycm9yKGUpOw0KICAgIH0NCg0KICAgIHRyeSB7DQogICAgICBjb25zdCB0aW1lRGF0YSA9IGF3YWl0IHRoaXMuZmV0Y2hUaW1lRGF0YSgpOw0KICAgICAgdGhpcy50aW1lQ2hhcnRBcnJheSA9IHRpbWVEYXRhOw0KICAgICAgLy8gY29uc29sZS5sb2coDQogICAgICAvLyAgICJUaW1lIExlbmd0aDogIiArIHRoaXMudGltZUNoYXJ0QXJyYXkuZGF0YXNldHNbMF0uZGF0YS5sZW5ndGgNCiAgICAgIC8vICk7DQogICAgICB0aGlzLmxvYWRlZCA9IHRydWU7DQogICAgfSBjYXRjaCAoZSkgew0KICAgICAgY29uc29sZS5lcnJvcihlKTsNCiAgICB9DQogIH0sDQp9Ow0K"},{"version":3,"sources":["Dancers.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2JA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Dancers.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <v-container>\r\n    <div style=\"width: 20%; float:left\">\r\n      <psnd />\r\n    </div>\r\n    <div style=\"width: 80%; float:right\">\r\n      <!-- <h1 style=\"text-align:left;\">Helloworld</h1> -->\r\n      <v-row>\r\n        <v-col class=\"mx-auto\" md=\"3\">\r\n          <v-select\r\n            v-model=\"selectedChart\"\r\n            :items=\"chartType\"\r\n            item-text=\"name\"\r\n            item-value=\"value\"\r\n            filled\r\n            label=\"Chart Type\"\r\n            background-color=\"#A9D66E\"\r\n            prepend-icon=\"mdi-view-dashboard\"\r\n            clearable\r\n            dense\r\n            color=\"#000000\"\r\n            @input=\"selectChart\"\r\n            @click:clear=\"clearCharts\"\r\n          />\r\n        </v-col>\r\n        <v-col class=\"mx-auto\" md=\"3\">\r\n          <v-select\r\n            v-model=\"selectedDancers\"\r\n            :items=\"dancers\"\r\n            item-text=\"name\"\r\n            item-value=\"value\"\r\n            filled\r\n            label=\"Dancer(s)\"\r\n            background-color=\"#00D19C\"\r\n            prepend-icon=\"mdi-account-multiple\"\r\n            clearable\r\n            multiple\r\n            dense\r\n            color=\"#000000\"\r\n            @input=\"selectDancers\"\r\n            @click:clear=\"clearDancers\"\r\n          />\r\n        </v-col>\r\n        <v-col class=\"mx-auto\" md=\"3\">\r\n          <v-menu\r\n            v-model=\"dateMenu\"\r\n            :nudge-right=\"40\"\r\n            :close-on-content-click=\"false\"\r\n            transition=\"scale-transition\"\r\n            offset-y\r\n            max-width=\"290px\"\r\n            min-width=\"290px\"\r\n          >\r\n            <template v-slot:activator=\"{ on }\">\r\n              <v-text-field\r\n                label=\"Choose Date(s)\"\r\n                :value=\"dateDisp\"\r\n                v-on=\"on\"\r\n                clearable\r\n                background-color=\"#3DDBD8\"\r\n                prepend-icon=\"mdi-calendar\"\r\n                filled\r\n                dense\r\n                color=\"#000000\"\r\n                @click:clear=\"clearDates\"\r\n              />\r\n            </template>\r\n            <v-date-picker\r\n              v-model=\"dateVal\"\r\n              @click:date=\"selectDates\"\r\n              :max=\"getEndDate\"\r\n              range\r\n            />\r\n          </v-menu>\r\n        </v-col>\r\n        <v-col class=\"mx-auto\" md=\"1\">\r\n          <v-btn icon color=\"green\" fab @click=\"submit\">\r\n            <v-icon>mdi-check</v-icon>\r\n          </v-btn>\r\n        </v-col>\r\n      </v-row>\r\n      <template v-if=\"loaded && haveTime && haveSet\">\r\n        <v-row>\r\n          <v-card width=\"49%\" class=\"mx-auto\">\r\n            <v-card-title class=\"justify-center\"\r\n              >Time Spent (Minutes) vs Dancers</v-card-title\r\n            >\r\n            <BarChartTime :chartdata=\"timeChartArray\" :options=\"chartOptions\" />\r\n          </v-card>\r\n          <v-spacer />\r\n          <v-card width=\"49%\" class=\"mx-auto\">\r\n            <v-card-title class=\"justify-center\"\r\n              >Number of Dance Sets vs Dancers</v-card-title\r\n            >\r\n            <BarChartSet :chartdata=\"setChartArray\" :options=\"chartOptions\" />\r\n          </v-card>\r\n        </v-row>\r\n      </template>\r\n      <template v-else-if=\"loaded && haveTime && !haveSet\">\r\n        <v-row>\r\n          <v-card width=\"100%\" class=\"mx-auto\">\r\n            <v-card-title class=\"justify-center\"\r\n              >Time Spent (Minutes) vs Dancers</v-card-title\r\n            >\r\n            <BarChartTime :chartdata=\"timeChartArray\" :options=\"chartOptions\" />\r\n          </v-card>\r\n        </v-row>\r\n      </template>\r\n      <template v-else-if=\"loaded && !haveTime && haveSet\">\r\n        <v-row>\r\n          <v-card width=\"100%\" class=\"mx-auto\">\r\n            <v-card-title class=\"justify-center\"\r\n              >Number of Dance Sets vs Dancers</v-card-title\r\n            >\r\n            <BarChartSet :chartdata=\"setChartArray\" :options=\"chartOptions\" />\r\n          </v-card>\r\n        </v-row>\r\n      </template>\r\n      <template v-else-if=\"loaded && !haveTime && !haveSet\">\r\n        <v-row>\r\n          <v-card\r\n            class=\"mx-auto\"\r\n            width=\"60%\"\r\n            height=\"160\"\r\n            color=\"#ECEFF1\"\r\n            rounded\r\n          >\r\n            <v-card-title>\r\n              <v-row align=\"center\" justify=\"center\">\r\n                <v-icon light large center>mdi-emoticon-sad</v-icon>\r\n              </v-row>\r\n            </v-card-title>\r\n            <p class=\"text-center\">\r\n              What you are looking for cannot be found.\r\n              <br />Sorry!\r\n            </p>\r\n          </v-card>\r\n        </v-row>\r\n      </template>\r\n      <template v-else>\r\n        <v-row justify=\"center\">\r\n          <v-progress-circular\r\n            indeterminate\r\n            :size=\"70\"\r\n            :width=\"7\"\r\n            color=\"#FF9800\"\r\n          />\r\n        </v-row>\r\n      </template>\r\n      <br />\r\n    </div>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport psnd from \"./PersistentSideNavDrawer\";\r\nimport Swal from \"sweetalert2\";\r\nimport BarChartSet from \"./Charts/BarChartSet\";\r\nimport BarChartTime from \"./Charts/BarChartTime\";\r\n\r\nexport default {\r\n  name: \"Dancers\",\r\n\r\n  components: {\r\n    psnd,\r\n    BarChartSet,\r\n    BarChartTime,\r\n  },\r\n\r\n  data: () => ({\r\n    selectedChart: null,\r\n    chartType: [\r\n      { name: \"Time Spent\", value: \"Time Bar\" },\r\n      { name: \"Sets Done\", value: \"Set Bar\" },\r\n    ],\r\n    selectedDancers: null,\r\n    dancers: [\r\n      { name: \"Jingxuan\", value: \"Jingxuan\" },\r\n      { name: \"Karan\", value: \"Karan\" },\r\n      { name: \"Kexin\", value: \"Kexin\" },\r\n      { name: \"Sarah\", value: \"Sarah\" },\r\n      { name: \"Tristy\", value: \"Tristy\" },\r\n      { name: \"Yunhan\", value: \"Yunhan\" },\r\n    ],\r\n    dateMenu: false,\r\n    dateVal: null,\r\n    getEndDate: new Date().toISOString().substr(0, 10),\r\n    haveTime: true,\r\n    haveSet: true,\r\n    timeChartArray: {\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          label: \"Time Spent\",\r\n          borderWidth: 1,\r\n          backgroundColor: [\r\n            \"rgba(255, 99, 132, 1)\",\r\n            \"rgba(255, 159, 64, 1)\",\r\n            \"rgba(255, 206, 86, 1)\",\r\n            \"rgba(54, 162, 235, 1)\",\r\n            \"rgba(75, 192, 192, 1)\",\r\n            \"rgba(153, 102, 255, 1)\",\r\n          ],\r\n          borderColor: [\r\n            \"rgba(255, 99, 132, 1)\",\r\n            \"rgba(255, 159, 64, 1)\",\r\n            \"rgba(255, 206, 86, 1)\",\r\n            \"rgba(54, 162, 235, 1)\",\r\n            \"rgba(75, 192, 192, 1)\",\r\n            \"rgba(153, 102, 255, 1)\",\r\n          ],\r\n          pointBorderColor: \"#2554FF\",\r\n          data: null,\r\n        },\r\n      ],\r\n    },\r\n    setChartArray: {\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          label: \"Number of Sets\",\r\n          borderWidth: 1,\r\n          backgroundColor: [\r\n            \"rgba(255, 99, 132, 1)\",\r\n            \"rgba(255, 159, 64, 1)\",\r\n            \"rgba(255, 206, 86, 1)\",\r\n            \"rgba(54, 162, 235, 1)\",\r\n            \"rgba(75, 192, 192, 1)\",\r\n            \"rgba(153, 102, 255, 1)\",\r\n          ],\r\n          borderColor: [\r\n            \"rgba(255, 99, 132, 1)\",\r\n            \"rgba(255, 159, 64, 1)\",\r\n            \"rgba(255, 206, 86, 1)\",\r\n            \"rgba(54, 162, 235, 1)\",\r\n            \"rgba(75, 192, 192, 1)\",\r\n            \"rgba(153, 102, 255, 1)\",\r\n          ],\r\n          pointBorderColor: \"#2554FF\",\r\n          data: null,\r\n        },\r\n      ],\r\n    },\r\n    chartOptions: {\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              beginAtZero: true,\r\n            },\r\n            gridLines: {\r\n              display: true,\r\n            },\r\n          },\r\n        ],\r\n        xAxes: [\r\n          {\r\n            gridLines: {\r\n              display: false,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      plugins: {\r\n        datalabels: {\r\n          color: \"black\",\r\n          textAlign: \"center\",\r\n          font: {\r\n            weight: \"bold\",\r\n            size: 16,\r\n          },\r\n        },\r\n      },\r\n      legend: {\r\n        display: false,\r\n      },\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n    },\r\n    loaded: false,\r\n  }),\r\n  computed: {\r\n    dateDisp() {\r\n      return this.dateVal;\r\n    },\r\n  },\r\n  methods: {\r\n    clearCharts: function() {\r\n      this.selectedChart = null;\r\n    },\r\n    selectChart: function() {\r\n      if (this.selectedChart != null) {\r\n        if (this.selectedChart === \"Table\") {\r\n          console.log(\"get data from Dance\");\r\n        } else if (this.selectedChart === \"Pie\") {\r\n          console.log(\"get data from Sync\");\r\n        }\r\n      } else {\r\n        console.log(\"get data from Dance and Sync\");\r\n      }\r\n    },\r\n    clearDancers: function() {\r\n      this.selectedDancers = null;\r\n    },\r\n    selectDancers: function() {\r\n      if (this.selectedDancers != null && this.selectedDancers.length > 0) {\r\n        console.log(this.selectedDancers.length);\r\n        for (var i = 0; i < this.selectedDancers.length; i++) {\r\n          console.log(this.selectedDancers[i]);\r\n        }\r\n      } else {\r\n        this.selectedDancers = null;\r\n      }\r\n    },\r\n    clearDates: function() {\r\n      this.dateVal = null;\r\n    },\r\n    selectDates: function() {\r\n      if (this.dateVal != null) {\r\n        console.log(this.dateVal.length);\r\n        for (var j = 0; j < this.dateVal.length; j++) {\r\n          console.log(this.dateVal[j]);\r\n        }\r\n      } else {\r\n        console.log(\"display all dates\");\r\n      }\r\n    },\r\n    submit: function() {\r\n      // data in selectedDancers are to be taken as OR\r\n      // data in dateVal is to be taken as OR\r\n      // selectedChart refers to the DB Table (Time Bar: DailyTracker, Set Bar: DailySet)\r\n      // SELECT * FROM DailyTracker/DailySet WHERE (this.selectedDancers) AND (this.dateVal)\r\n      if (this.selectedDancers != null) {\r\n        this.selectedDancers = this.selectedDancers.sort();\r\n        var dancers = '\"';\r\n        for (var i = 0; i < this.selectedDancers.length; i++) {\r\n          dancers += this.selectedDancers[i] + \",\";\r\n        }\r\n        dancers = dancers.slice(0, -1);\r\n        dancers += '\"';\r\n      } else {\r\n        dancers = null;\r\n      }\r\n\r\n      if (this.dateVal != null) {\r\n        if (this.dateVal.length == 1) {\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Oops...\",\r\n            text: \"Please provide a range of dates.\",\r\n          });\r\n          this.clearDates();\r\n        } else {\r\n          console.log(this.dateVal);\r\n          this.dateVal = this.dateVal.sort();\r\n          var dates = '\"' + this.dateVal[0] + \",\" + this.dateVal[1] + '\"';\r\n        }\r\n      } else {\r\n        dates = null;\r\n      }\r\n\r\n      const dancerDataToSend =\r\n        '{\"chart\":\"' +\r\n        this.selectedChart +\r\n        '\", ' +\r\n        '\"dancers\":' +\r\n        dancers +\r\n        ', \"dates\":' +\r\n        dates +\r\n        \"}\";\r\n      // console.log(dancerDataToSend);\r\n      var jsonDancerDataToSend = JSON.parse(dancerDataToSend);\r\n      console.log(\r\n        \"Dancer Data To Send: \" + JSON.stringify(jsonDancerDataToSend)\r\n      );\r\n\r\n      axios\r\n        .post(\"/dashboard/dancers\", {\r\n          dancerData: jsonDancerDataToSend,\r\n        })\r\n        .then((response) => {\r\n          console.log(response.data.timeData.length);\r\n          console.log(response.data.setData.length);\r\n          this.haveTime = false;\r\n          this.haveSet = false;\r\n          this.loaded = false;\r\n          this.timeChartArray = {};\r\n          this.setChartArray = {};\r\n          let labelForCharts = [];\r\n\r\n          if (this.selectedDancers != null) {\r\n            for (let i = 0; i < this.selectedDancers.length; i++) {\r\n              labelForCharts.push(this.selectedDancers[i]);\r\n            }\r\n          } else {\r\n            labelForCharts = [\r\n              \"Jingxuan\",\r\n              \"Karan\",\r\n              \"Kexin\",\r\n              \"Sarah\",\r\n              \"Tristy\",\r\n              \"Yunhan\",\r\n            ];\r\n          }\r\n          if (\r\n            response.data.timeData.length != undefined &&\r\n            response.data.setData.length != undefined\r\n          ) {\r\n            this.haveTime = true;\r\n            this.haveSet = true;\r\n            this.loaded = true;\r\n            let timeChartData = [];\r\n            for (let j = 0; j < response.data.timeData.length; j++) {\r\n              if (response.data.timeData[j].sum == null) {\r\n                timeChartData.push(0);\r\n              } else {\r\n                timeChartData.push(parseInt(response.data.timeData[j].sum));\r\n              }\r\n            }\r\n            let chartArrayTime = {\r\n              labels: labelForCharts,\r\n              datasets: [\r\n                {\r\n                  label: \"Time Spent\",\r\n                  borderWidth: 1,\r\n                  backgroundColor: [\r\n                    \"rgba(255, 99, 132, 1)\",\r\n                    \"rgba(255, 159, 64, 1)\",\r\n                    \"rgba(255, 206, 86, 1)\",\r\n                    \"rgba(54, 162, 235, 1)\",\r\n                    \"rgba(75, 192, 192, 1)\",\r\n                    \"rgba(153, 102, 255, 1)\",\r\n                  ],\r\n                  borderColor: [\r\n                    \"rgba(255, 99, 132, 1)\",\r\n                    \"rgba(255, 159, 64, 1)\",\r\n                    \"rgba(255, 206, 86, 1)\",\r\n                    \"rgba(54, 162, 235, 1)\",\r\n                    \"rgba(75, 192, 192, 1)\",\r\n                    \"rgba(153, 102, 255, 1)\",\r\n                  ],\r\n                  pointBorderColor: \"#2554FF\",\r\n                  data: timeChartData,\r\n                },\r\n              ],\r\n            };\r\n            this.timeChartArray = chartArrayTime;\r\n\r\n            let setChartData = [];\r\n            for (let k = 0; k < response.data.setData.length; k++) {\r\n              setChartData.push(parseInt(response.data.setData[k].count));\r\n            }\r\n            let chartArraySet = {\r\n              labels: labelForCharts,\r\n              datasets: [\r\n                {\r\n                  label: \"Number of Sets\",\r\n                  borderWidth: 1,\r\n                  backgroundColor: [\r\n                    \"rgba(255, 99, 132, 1)\",\r\n                    \"rgba(255, 159, 64, 1)\",\r\n                    \"rgba(255, 206, 86, 1)\",\r\n                    \"rgba(54, 162, 235, 1)\",\r\n                    \"rgba(75, 192, 192, 1)\",\r\n                    \"rgba(153, 102, 255, 1)\",\r\n                  ],\r\n                  borderColor: [\r\n                    \"rgba(255, 99, 132, 1)\",\r\n                    \"rgba(255, 159, 64, 1)\",\r\n                    \"rgba(255, 206, 86, 1)\",\r\n                    \"rgba(54, 162, 235, 1)\",\r\n                    \"rgba(75, 192, 192, 1)\",\r\n                    \"rgba(153, 102, 255, 1)\",\r\n                  ],\r\n                  pointBorderColor: \"#2554FF\",\r\n                  data: setChartData,\r\n                },\r\n              ],\r\n            };\r\n            this.setChartArray = chartArraySet;\r\n          } else if (\r\n            response.data.timeData.length != undefined &&\r\n            response.data.setData.length == undefined\r\n          ) {\r\n            this.haveTime = true;\r\n            this.haveSet = false;\r\n            this.loaded = true;\r\n            let timeChartData = [];\r\n            for (let j = 0; j < response.data.timeData.length; j++) {\r\n              if (response.data.timeData[j].sum == null) {\r\n                timeChartData.push(0);\r\n              } else {\r\n                timeChartData.push(parseInt(response.data.timeData[j].sum));\r\n              }\r\n            }\r\n            console.log(\"Label: \" + labelForCharts);\r\n            console.log(\"Time: \" + timeChartData);\r\n            let chartArrayTime = {\r\n              labels: labelForCharts,\r\n              datasets: [\r\n                {\r\n                  label: \"Time Spent\",\r\n                  borderWidth: 1,\r\n                  backgroundColor: [\r\n                    \"rgba(255, 99, 132, 1)\",\r\n                    \"rgba(255, 159, 64, 1)\",\r\n                    \"rgba(255, 206, 86, 1)\",\r\n                    \"rgba(54, 162, 235, 1)\",\r\n                    \"rgba(75, 192, 192, 1)\",\r\n                    \"rgba(153, 102, 255, 1)\",\r\n                  ],\r\n                  borderColor: [\r\n                    \"rgba(255, 99, 132, 1)\",\r\n                    \"rgba(255, 159, 64, 1)\",\r\n                    \"rgba(255, 206, 86, 1)\",\r\n                    \"rgba(54, 162, 235, 1)\",\r\n                    \"rgba(75, 192, 192, 1)\",\r\n                    \"rgba(153, 102, 255, 1)\",\r\n                  ],\r\n                  pointBorderColor: \"#2554FF\",\r\n                  data: timeChartData,\r\n                },\r\n              ],\r\n            };\r\n            this.timeChartArray = chartArrayTime;\r\n          } else if (\r\n            response.data.timeData.length == undefined &&\r\n            response.data.setData.length != undefined\r\n          ) {\r\n            this.haveTime = false;\r\n            this.haveSet = true;\r\n            this.loaded = true;\r\n            let setChartData = [];\r\n            for (let k = 0; k < response.data.setData.length; k++) {\r\n              setChartData.push(parseInt(response.data.setData[k].count));\r\n            }\r\n            console.log(setChartData);\r\n            let chartArraySet = {\r\n              labels: labelForCharts,\r\n              datasets: [\r\n                {\r\n                  label: \"Number of Sets\",\r\n                  borderWidth: 1,\r\n                  backgroundColor: [\r\n                    \"rgba(255, 99, 132, 1)\",\r\n                    \"rgba(255, 159, 64, 1)\",\r\n                    \"rgba(255, 206, 86, 1)\",\r\n                    \"rgba(54, 162, 235, 1)\",\r\n                    \"rgba(75, 192, 192, 1)\",\r\n                    \"rgba(153, 102, 255, 1)\",\r\n                  ],\r\n                  borderColor: [\r\n                    \"rgba(255, 99, 132, 1)\",\r\n                    \"rgba(255, 159, 64, 1)\",\r\n                    \"rgba(255, 206, 86, 1)\",\r\n                    \"rgba(54, 162, 235, 1)\",\r\n                    \"rgba(75, 192, 192, 1)\",\r\n                    \"rgba(153, 102, 255, 1)\",\r\n                  ],\r\n                  pointBorderColor: \"#2554FF\",\r\n                  data: setChartData,\r\n                },\r\n              ],\r\n            };\r\n            this.setChartArray = chartArraySet;\r\n          } else {\r\n            this.haveTime = false;\r\n            this.haveSet = false;\r\n            this.loaded = true;\r\n          }\r\n\r\n          console.dir(this.timeChartArray);\r\n          console.dir(this.setChartArray);\r\n        });\r\n    },\r\n    fetchSetData: async function() {\r\n      const response = await axios.get(\"/dashboard/dancers\");\r\n      console.log(response.data.timeData);\r\n      console.log(response.data.setData);\r\n      let setChartData = [];\r\n      for (let i = 0; i < response.data.setData.length; i++) {\r\n        setChartData.push(parseInt(response.data.setData[i].count));\r\n      }\r\n      console.log(setChartData);\r\n      let chartArraySet = {\r\n        labels: [\"Jingxuan\", \"Karan\", \"Kexin\", \"Sarah\", \"Tristy\", \"Yunhan\"],\r\n        datasets: [\r\n          {\r\n            label: \"Number of Sets\",\r\n            borderWidth: 1,\r\n            backgroundColor: [\r\n              \"rgba(255, 99, 132, 1)\",\r\n              \"rgba(255, 159, 64, 1)\",\r\n              \"rgba(255, 206, 86, 1)\",\r\n              \"rgba(54, 162, 235, 1)\",\r\n              \"rgba(75, 192, 192, 1)\",\r\n              \"rgba(153, 102, 255, 1)\",\r\n            ],\r\n            borderColor: [\r\n              \"rgba(255, 99, 132, 1)\",\r\n              \"rgba(255, 159, 64, 1)\",\r\n              \"rgba(255, 206, 86, 1)\",\r\n              \"rgba(54, 162, 235, 1)\",\r\n              \"rgba(75, 192, 192, 1)\",\r\n              \"rgba(153, 102, 255, 1)\",\r\n            ],\r\n            pointBorderColor: \"#2554FF\",\r\n            data: setChartData,\r\n          },\r\n        ],\r\n      };\r\n      return chartArraySet;\r\n    },\r\n    fetchTimeData: async function() {\r\n      const response = await axios.get(\"/dashboard/dancers\");\r\n      console.log(response.data.timeData);\r\n      let timeChartData = [];\r\n      for (let i = 0; i < response.data.timeData.length; i++) {\r\n        if (response.data.timeData[i].sum == null) {\r\n          timeChartData.push(0);\r\n        } else {\r\n          timeChartData.push(parseInt(response.data.timeData[i].sum));\r\n        }\r\n      }\r\n      console.log(timeChartData);\r\n      let chartArrayTime = {\r\n        labels: [\"Jingxuan\", \"Karan\", \"Kexin\", \"Sarah\", \"Tristy\", \"Yunhan\"],\r\n        datasets: [\r\n          {\r\n            label: \"Time Spent\",\r\n            borderWidth: 1,\r\n            backgroundColor: [\r\n              \"rgba(255, 99, 132, 1)\",\r\n              \"rgba(255, 159, 64, 1)\",\r\n              \"rgba(255, 206, 86, 1)\",\r\n              \"rgba(54, 162, 235, 1)\",\r\n              \"rgba(75, 192, 192, 1)\",\r\n              \"rgba(153, 102, 255, 1)\",\r\n            ],\r\n            borderColor: [\r\n              \"rgba(255, 99, 132, 1)\",\r\n              \"rgba(255, 159, 64, 1)\",\r\n              \"rgba(255, 206, 86, 1)\",\r\n              \"rgba(54, 162, 235, 1)\",\r\n              \"rgba(75, 192, 192, 1)\",\r\n              \"rgba(153, 102, 255, 1)\",\r\n            ],\r\n            pointBorderColor: \"#2554FF\",\r\n            data: timeChartData,\r\n          },\r\n        ],\r\n      };\r\n      return chartArrayTime;\r\n    },\r\n  },\r\n  async mounted() {\r\n    this.loaded = false;\r\n    try {\r\n      const setData = await this.fetchSetData();\r\n      this.setChartArray = setData;\r\n      // console.log(\"Set Length: \" + this.setChartArray.datasets[0].data.length);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n\r\n    try {\r\n      const timeData = await this.fetchTimeData();\r\n      this.timeChartArray = timeData;\r\n      // console.log(\r\n      //   \"Time Length: \" + this.timeChartArray.datasets[0].data.length\r\n      // );\r\n      this.loaded = true;\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  },\r\n};\r\n</script>\r\n"]}]}